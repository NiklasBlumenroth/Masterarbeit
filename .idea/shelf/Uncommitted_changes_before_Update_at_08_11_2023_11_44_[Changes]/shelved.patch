Index: src/main/java/MonteCarloHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Enums.LexPreferenzes;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.*;\r\n\r\npublic class MonteCarloHelper {\r\n    public static int monteCarloIterations = 1000;\r\n    public static int iteration;\r\n    public static int alt;\r\n    public static int crit;\r\n    public static int k;\r\n    public static long size = 0;\r\n    public static boolean individual = false;\r\n\r\n    public static void main(String[] args) {\r\n        Map<Integer, Integer> list = new HashMap<>();\r\n        for(int i = 0; i < 100; i++){\r\n            list.put(i, 0);\r\n        }\r\n        Random random = new Random();\r\n        int number = 0;\r\n        Integer sum;\r\n        int totals = 1000000;\r\n        for(int i = 0; i < totals; i++){\r\n            number = random.nextInt(100);\r\n            sum = list.get(number);\r\n            list.put(number, sum + 1);\r\n        }\r\n\r\n        for(int i = 0; i < 100; i++){\r\n            System.out.println(list.get(i));\r\n        }\r\n        System.out.println(list);\r\n    }\r\n\r\n    public static List<Map<String, Object>>  showMonteCarloSaw(ArrayList<Object>[][] aggregatedMatrix, ArrayList<Object>[] aggregatedWeights, boolean full, boolean show){\r\n        alt = aggregatedMatrix.length;\r\n        crit = aggregatedWeights.length;\r\n\r\n        List<List<Object>> preferenceCombinationList = getPreferenceCombinations(aggregatedWeights);\r\n        List<List<Object>> judgementCombinationList = getJudgementCombinations(aggregatedMatrix);\r\n\r\n        if(judgementCombinationList == null){\r\n            //use individual instance generation\r\n            k = 1_000_000_000;\r\n            individual = true;\r\n        }else{\r\n            k = judgementCombinationList.size() * preferenceCombinationList.size();\r\n        }\r\n\r\n        Object[][] sawMatrix = null;\r\n        Object[] sawWeights = null;\r\n        Object[] rankingTotalPoints;\r\n        Object[] rankingPosition;\r\n        Object[][] rankAcceptabilityIndices = new Object[alt][alt];\r\n        //fill ranking counter with 0\r\n        for(int i = 0; i < alt; i++){\r\n            for(int j = 0; j < alt; j++){\r\n                rankAcceptabilityIndices[i][j] = 0.0;\r\n            }\r\n        }\r\n\r\n        // generate map for counting\r\n        Map<Object, Object>[][] currentJudgementAcceptabilityIndices = new Map[alt][crit];\r\n        Map<Object, Object>[][] potentialJudgementAcceptabilityIndices = new Map[alt][crit];\r\n        Map<Object, Object>[] currentPreferenceAcceptabilityIndices = new Map[crit];\r\n        Map<Object, Object>[] potentialPreferencesAcceptabilityIndices = new Map[crit];\r\n\r\n        //fill matrix map with 0\r\n        fillMatrixMapWithZero(aggregatedMatrix, currentJudgementAcceptabilityIndices);\r\n        fillMatrixMapWithZero(aggregatedMatrix, potentialJudgementAcceptabilityIndices);\r\n        //fill weights map with 0\r\n        fillWeightsMapWithZero(aggregatedWeights, currentPreferenceAcceptabilityIndices);\r\n        fillWeightsMapWithZero(aggregatedWeights, potentialPreferencesAcceptabilityIndices);\r\n\r\n        //create currentJudgementAcceptabilityIndices and currentPreferenceAcceptabilityIndices\r\n        //create potentialJudgementAcceptabilityIndices and potentialPreferenceAcceptabilityIndices\r\n        ArrayList<Map<Object, Object>[][]> objectCurrentJudgementAcceptabilityIndices = new ArrayList<>();\r\n        //[index for ai is winning][row][col][map for possible decisions]\r\n        ArrayList<Map<Object, Object>[][]> objectPotentialJudgementAcceptabilityIndices = new ArrayList<>();\r\n        for(int j = 0; j < alt; j++){\r\n            objectCurrentJudgementAcceptabilityIndices.add(currentJudgementAcceptabilityIndices);\r\n            currentJudgementAcceptabilityIndices = new Map[alt][crit];\r\n            fillMatrixMapWithZero(aggregatedMatrix, currentJudgementAcceptabilityIndices);\r\n\r\n            objectPotentialJudgementAcceptabilityIndices.add(potentialJudgementAcceptabilityIndices);\r\n            potentialJudgementAcceptabilityIndices = new Map[alt][crit];\r\n            fillMatrixMapWithZero(aggregatedMatrix, potentialJudgementAcceptabilityIndices);\r\n        }\r\n\r\n        ArrayList<Map<Object, Object>[]> objectCurrentPreferenceAcceptabilityIndices = new ArrayList<>();\r\n        ArrayList<Map<Object, Object>[]> objectPotentialPreferenceAcceptabilityIndices = new ArrayList<>();\r\n        for(int j = 0; j < alt; j++){\r\n            objectCurrentPreferenceAcceptabilityIndices.add(currentPreferenceAcceptabilityIndices);\r\n            currentPreferenceAcceptabilityIndices = new Map[crit];\r\n            fillWeightsMapWithZero(aggregatedWeights, currentPreferenceAcceptabilityIndices);\r\n\r\n            objectPotentialPreferenceAcceptabilityIndices.add(potentialPreferencesAcceptabilityIndices);\r\n            potentialPreferencesAcceptabilityIndices = new Map[crit];\r\n            fillWeightsMapWithZero(aggregatedWeights, potentialPreferencesAcceptabilityIndices);\r\n        }\r\n\r\n        //monteCarloSimulation\r\n        if(k < 1000){\r\n            full = true;\r\n            iteration = k;\r\n        }else{\r\n            full = false;\r\n            iteration = monteCarloIterations;\r\n        }\r\n        int prefCounter = 0;\r\n        int jugCounter = 0;\r\n        for(int i = 0; i < iteration - 1; i++){\r\n            if(full){\r\n                if(jugCounter == judgementCombinationList.size()){\r\n                    jugCounter = 0;\r\n                    prefCounter++;\r\n\r\n                }\r\n                sawMatrix = listToMatrix(judgementCombinationList.get(jugCounter), alt);\r\n\r\n                jugCounter++;\r\n                sawWeights = preferenceCombinationList.get(prefCounter).toArray();\r\n\r\n            }else{\r\n                Random random = new Random();\r\n                int rngNumberW = random.nextInt(preferenceCombinationList.size());\r\n\r\n                sawWeights = preferenceCombinationList.get(rngNumberW).toArray();\r\n                if(individual){\r\n                    sawMatrix = generateIndividualMatrix(aggregatedMatrix);\r\n                }else{\r\n                    int rngNumberM = random.nextInt(judgementCombinationList.size());\r\n                    sawMatrix = listToMatrix(judgementCombinationList.get(rngNumberM), alt);\r\n                }\r\n            }\r\n\r\n            if(i > 38928000){\r\n                rankingTotalPoints = Helper.saw(sawMatrix, sawWeights, false);\r\n            }else {\r\n                rankingTotalPoints = Helper.saw(sawMatrix, sawWeights, false);\r\n            }\r\n\r\n\r\n            rankingPosition = getRanksArray(rankingTotalPoints);\r\n            addRanking(rankAcceptabilityIndices, rankingPosition);\r\n            if(show){\r\n                System.out.println(\"\\n ranking \");\r\n                Helper.show1DArray(rankingPosition);\r\n                System.out.println(\"\\n rankAcceptabilityIndices \");\r\n                Helper.showAcceptabilityIndices(rankAcceptabilityIndices);\r\n            }\r\n            //sawMatrix + ranking = countingMatrixRankingMap\r\n            countByRankingAndDecision(rankingPosition, objectCurrentJudgementAcceptabilityIndices, sawMatrix);\r\n            //sawWeights + ranking = countingWeightsRankingMap\r\n            countByRankingAndWeights(rankingPosition, objectCurrentPreferenceAcceptabilityIndices, sawWeights);\r\n\r\n            if(false){\r\n                System.out.println(\"\\nMatrix\");\r\n                Helper.show2DArray(sawMatrix);\r\n                System.out.println(\"\\nWeight\");\r\n                Helper.show1DArray(sawWeights);\r\n                System.out.println(\"\\n rankingTotalPoints\");\r\n                Helper.show1DArray(rankingTotalPoints);\r\n                System.out.println(\"\\n rankingPosition\");\r\n                Helper.show1DArray(rankingPosition);\r\n                System.out.println(\"\\n new rankAcceptabilityIndices\");\r\n                Helper.show2DArray(rankAcceptabilityIndices);\r\n                System.out.println(\"\\n new objectCurrentJudgementAcceptabilityIndices\");\r\n                Helper.show2DArray(objectCurrentJudgementAcceptabilityIndices.get(0));\r\n            }\r\n\r\n        }\r\n\r\n        if(show){\r\n            System.out.println(\"\\nAggregated Matrix\");\r\n            Helper.show2DArray(aggregatedMatrix);\r\n\r\n            System.out.println(\"\\nAggregated Weight\");\r\n            Helper.show1DArray(aggregatedWeights);\r\n\r\n            System.out.println(\"\\nAggregated K: \" + k);\r\n            System.out.println(\"\\nfinal rankAcceptabilityIndices \");\r\n            Helper.showAcceptabilityIndices(rankAcceptabilityIndices);\r\n        }\r\n\r\n        normalizeTotalRankingPositions(rankAcceptabilityIndices);\r\n        if(show){\r\n            System.out.println(\"\\nfinal rankAcceptabilityIndices scaled\");\r\n            Helper.showAcceptabilityIndices(rankAcceptabilityIndices);\r\n        }\r\n\r\n        scaleAggregatedMatrixMap(objectCurrentJudgementAcceptabilityIndices);\r\n        if(show){\r\n            for(int j = 0; j < alt; j++){\r\n                System.out.println(\"\\ncurrentJudgementAcceptabilityIndex for a\" + j);\r\n                Helper.show2DArray(objectCurrentJudgementAcceptabilityIndices.get(j));\r\n            }\r\n        }\r\n\r\n        scaleAggregatedWeightsMap(objectCurrentPreferenceAcceptabilityIndices);\r\n        if(show){\r\n            for (int i = 0; i < crit; i++){\r\n                System.out.println(\"\\ncurrentPreferenceAcceptabilityIndex for a\" + i);\r\n                Helper.show1DArray(objectCurrentPreferenceAcceptabilityIndices.get(i));\r\n            }\r\n        }\r\n\r\n        fillPotentialJudgementAcceptabilityIndices(objectCurrentJudgementAcceptabilityIndices, objectPotentialJudgementAcceptabilityIndices);\r\n        if(show){\r\n            for(int j = 0; j < alt; j++){\r\n                System.out.println(\"\\npotentialJudgementAcceptabilityIndex for a\" + j);\r\n                Helper.show2DArray(objectPotentialJudgementAcceptabilityIndices.get(j));\r\n            }\r\n        }\r\n\r\n        fillPotentialAggregatedWeightsRankingMap(objectCurrentPreferenceAcceptabilityIndices, objectPotentialPreferenceAcceptabilityIndices);\r\n        if(show){\r\n            for (int i = 0; i < crit; i++){\r\n                System.out.println(\"\\npotentialPreferenceAcceptabilityIndex for a\" + i);\r\n                Helper.show1DArray(objectPotentialPreferenceAcceptabilityIndices.get(i));\r\n            }\r\n        }\r\n\r\n        Map<Object, Double>[][] judgementEntropyMatrix = getEntropyMatrix(objectPotentialJudgementAcceptabilityIndices);\r\n        Map<Object, Double>[] preferenceEntropy = getEntropyPreference(objectPotentialPreferenceAcceptabilityIndices);\r\n\r\n        if(show){\r\n            System.out.println(\"\\njudgementEntropyMatrix\");\r\n            Helper.show2DArray(judgementEntropyMatrix);\r\n            System.out.println(\"\\npreferenceEntropy\");\r\n            Helper.show1DArray(preferenceEntropy);\r\n            System.out.println(\"\\ncurrent entropy\");\r\n            System.out.println(getCurrentEntropy(rankAcceptabilityIndices));\r\n        }\r\n        return getLowestValue(judgementEntropyMatrix, preferenceEntropy);\r\n    }\r\n\r\n    public static Object[][] generateIndividualMatrix(ArrayList<Object>[][] aggregatedMatrix){\r\n        Object[][] generatedMatrix = new Object[aggregatedMatrix.length][aggregatedMatrix[0].length];\r\n        Random random = new Random();\r\n        int rngNumber;\r\n        for(int i = 0; i < aggregatedMatrix.length; i++){\r\n            for(int j = 0; j < aggregatedMatrix[i].length; j++){\r\n                 rngNumber = random.nextInt(aggregatedMatrix[i][j].size());\r\n                generatedMatrix[i][j] = aggregatedMatrix[i][j].get(rngNumber);\r\n            }\r\n        }\r\n        return generatedMatrix;\r\n    }\r\n    public static boolean doubleOne(Object[] ranking){\r\n        int counter = 0;\r\n        for(int i = 0; i < ranking.length; i++){\r\n            if((Integer)ranking[i] == 1){\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        if(counter == 2){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static List<Map<String, Object>> getLowestValue(Map<Object, Double>[][] judgementEntropyMatrix, Map<Object, Double>[] preferenceEntropy){\r\n        List  list = new ArrayList<>();\r\n        List<Map<String, Object>> lowestValues = new ArrayList<>();\r\n        Map<String, Object> map = new HashMap<>();\r\n        //add all values to list\r\n        for (int i = 0; i < judgementEntropyMatrix.length; i++) {\r\n            for(int j = 0; j < judgementEntropyMatrix[i].length; j++){\r\n                for (Object key: judgementEntropyMatrix[i][j].keySet()) {\r\n                    list.add(judgementEntropyMatrix[i][j].get(key));\r\n                }\r\n            }\r\n        }\r\n\r\n        for(int i = 0; i < preferenceEntropy.length; i++){\r\n            for (Object key: preferenceEntropy[i].keySet()) {\r\n                list.add(preferenceEntropy[i].get(key));\r\n            }\r\n        }\r\n        //sort\r\n        Collections.sort(list);\r\n        //search vor lowest values\r\n        for (int i = 0; i < judgementEntropyMatrix.length; i++) {\r\n            for(int j = 0; j < judgementEntropyMatrix[i].length; j++){\r\n                for (Object key: judgementEntropyMatrix[i][j].keySet()) {\r\n                    map.put(\"lowestValue\", judgementEntropyMatrix[i][j].get(key));\r\n                    map.put(\"lowestKey\", key);\r\n                    map.put(\"lowestI\", i);\r\n                    map.put(\"lowestJ\", j);\r\n                    map.put(\"lowestValueIsJudgement\", true);\r\n                    lowestValues.add(map);\r\n                    map = new HashMap<>();\r\n                }\r\n            }\r\n        }\r\n\r\n        for(int i = 0; i < preferenceEntropy.length; i++){\r\n            for (Object key: preferenceEntropy[i].keySet()) {\r\n                map.put(\"lowestValue\", preferenceEntropy[i].get(key));\r\n                map.put(\"lowestKey\", key);\r\n                map.put(\"lowestI\", i);\r\n                map.put(\"lowestJ\", null);\r\n                map.put(\"lowestValueIsJudgement\", false);\r\n                lowestValues.add(map);\r\n                map = new HashMap<>();\r\n            }\r\n        }\r\n\r\n        lowestValues.sort((o1, o2) -> Double.compare((Double)o1.get(\"lowestValue\"), (Double)o2.get(\"lowestValue\")));\r\n        return lowestValues;\r\n    }\r\n\r\n    private static List<List<Object>> getPreferenceCombinations(ArrayList<Object>[] aggregatedWeights){\r\n        //aggregatedWeights\r\n        List<List<Object>> fullIterationObjects2 = new ArrayList<>();\r\n        fullIterationObjects2.addAll(Arrays.asList(aggregatedWeights));\r\n\r\n        List<List<Object>> cartesianProduct2 = CartesianProduct.cartesianProduct(fullIterationObjects2);\r\n\r\n        if(aggregatedWeights[0].get(0).getClass().equals(LexPreferenzes.class)){\r\n            cartesianProduct2 = cutInvalidIterationsForLex(cartesianProduct2);\r\n        }\r\n\r\n        return cartesianProduct2;\r\n    }\r\n\r\n    private static List<List<Object>> getJudgementCombinations(ArrayList<Object>[][] aggregatedMatrix){\r\n        //aggregatedMatrix\r\n        List<List<Object>> fullIterationObjects = new ArrayList<>();\r\n        for(int i = 0; i < aggregatedMatrix.length; i++){\r\n            fullIterationObjects.addAll(Arrays.asList(aggregatedMatrix[i]));\r\n        }\r\n\r\n        long judgementCombinationNumber = 1;\r\n        int tenFactorOf = 0;\r\n        for(List<Object> lists : fullIterationObjects){\r\n            judgementCombinationNumber *= lists.size();\r\n            if(judgementCombinationNumber > 10){\r\n                judgementCombinationNumber /= 10;\r\n                tenFactorOf += 3;\r\n            }\r\n        }\r\n        if(tenFactorOf > 7){\r\n            return null;\r\n        }\r\n\r\n        return CartesianProduct.cartesianProduct(fullIterationObjects);\r\n    }\r\n\r\n    public static List<List<Object>> cutInvalidIterationsForLex(List<List<Object>> cartesianProduct2){\r\n        List<List<Object>> list = new ArrayList<>();\r\n        for(int i = 0; i < cartesianProduct2.size(); i++){\r\n            if(!hasDouble(cartesianProduct2.get(i))){\r\n                list.add(cartesianProduct2.get(i));\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public static boolean hasDouble(List<Object> arr){\r\n        for(int j = 0; j < arr.size(); j++){\r\n            Object elem = arr.get(j);\r\n            for(int i = j + 1; i < arr.size(); i++){\r\n                if(arr.get(i).equals(elem)){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static Object[][] listToMatrix(List<Object> list, int matrixLength){\r\n        Object[][] matrix = new Object[matrixLength][list.size() / matrixLength];\r\n        int counter = 0;\r\n        for(int i = 0; i < matrix.length; i++){\r\n            for(int j = 0; j < matrix[i].length; j++){\r\n                matrix[i][j] = list.get(counter);\r\n                counter++;\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    public static Double getCurrentEntropy(Object[][] rankAcceptabilityIndices){\r\n        Double[] vector = new Double[rankAcceptabilityIndices.length];\r\n        for(int i = 0; i < rankAcceptabilityIndices.length; i++){\r\n            vector[i] = (Double) rankAcceptabilityIndices[i][0];\r\n        }\r\n        return calculateEntropy(vector);\r\n    }\r\n\r\n    public static  Map<Object, Double>[] getEntropyPreference(ArrayList<Map<Object, Object>[]> objectPotentialPreferenceAcceptabilityIndices){\r\n        Map<Object, Double>[] entropyMatrix = new Map[objectPotentialPreferenceAcceptabilityIndices.get(0).length];\r\n        Double[] vector = new Double[objectPotentialPreferenceAcceptabilityIndices.size()];\r\n\r\n        for(int i = 0; i < objectPotentialPreferenceAcceptabilityIndices.get(0).length; i++){\r\n            Map<Object, Double> map = new HashMap<>();\r\n            for (Map.Entry<Object, Object> entry : objectPotentialPreferenceAcceptabilityIndices.get(0)[i].entrySet()) {\r\n                for(int object = 0; object < vector.length; object++){\r\n                    vector[object] = (Double) objectPotentialPreferenceAcceptabilityIndices.get(object)[i].get(entry.getKey());\r\n                }\r\n                map.put(entry.getKey(), calculateEntropy(vector));\r\n                entropyMatrix[i] = map;\r\n            }\r\n\r\n        }\r\n\r\n        return entropyMatrix;\r\n    }\r\n\r\n    public static  Map<Object, Double>[][] getEntropyMatrix(ArrayList<Map<Object, Object>[][]> objectPotentialJudgementAcceptabilityIndices){\r\n        Map<Object, Double>[][] entropyMatrix = new Map[objectPotentialJudgementAcceptabilityIndices.get(0).length][];\r\n        Double[] vektor = new Double[objectPotentialJudgementAcceptabilityIndices.size()];\r\n\r\n        for(int i = 0; i < objectPotentialJudgementAcceptabilityIndices.get(0).length; i++){\r\n            entropyMatrix[i] = new Map[objectPotentialJudgementAcceptabilityIndices.get(0)[i].length];\r\n            for(int j = 0; j < objectPotentialJudgementAcceptabilityIndices.get(0)[i].length; j++){\r\n                Map<Object, Double> map = new HashMap<>();\r\n                for (Map.Entry<Object, Object> entry : objectPotentialJudgementAcceptabilityIndices.get(0)[i][j].entrySet()) {\r\n                    for(int object = 0; object < vektor.length; object++){\r\n                        vektor[object] = (Double) objectPotentialJudgementAcceptabilityIndices.get(object)[i][j].get(entry.getKey());\r\n                    }\r\n                    map.put(entry.getKey(), calculateEntropy(vektor));\r\n                    entropyMatrix[i][j] = map;\r\n                }\r\n            }\r\n        }\r\n\r\n        return entropyMatrix;\r\n    }\r\n\r\n    public static Double calculateEntropy(Double[] vector) {\r\n        Double entropy = 0.0;\r\n        Double sum = 0.0;\r\n\r\n        for (Double value : vector) {\r\n            sum += value;\r\n        }\r\n\r\n        for (Double value : vector) {\r\n            if (value != 0.0) {\r\n                Double probability = value / sum;\r\n                entropy -= probability * Math.log(probability) / Math.log(2);\r\n            }\r\n        }\r\n\r\n        return entropy;\r\n    }\r\n\r\n    public static void scaleAggregatedMatrixMap(ArrayList<Map<Object, Object>[][]> objectPotentialJudgementAcceptabilityIndices){\r\n        Double integer;\r\n        for(int object = 0; object < objectPotentialJudgementAcceptabilityIndices.size(); object++){\r\n            for(int i = 0; i < objectPotentialJudgementAcceptabilityIndices.get(object).length; i++){\r\n                for(int j = 0; j < objectPotentialJudgementAcceptabilityIndices.get(object)[i].length; j++){\r\n                    for (Map.Entry<Object, Object> entry : objectPotentialJudgementAcceptabilityIndices.get(object)[i][j].entrySet()) {\r\n                        integer = (Double)entry.getValue();\r\n                        integer /= (Integer) iteration;\r\n                        entry.setValue(integer);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void scaleAggregatedWeightsMap(ArrayList<Map<Object, Object>[]> objectCurrentPreferenceAcceptabilityIndices){\r\n        Double integer;\r\n        for(int object = 0; object < objectCurrentPreferenceAcceptabilityIndices.size(); object++){\r\n            for(int i = 0; i < objectCurrentPreferenceAcceptabilityIndices.get(object).length; i++){\r\n                for (Map.Entry<Object, Object> entry : objectCurrentPreferenceAcceptabilityIndices.get(object)[i].entrySet()) {\r\n                    integer = (Double)entry.getValue();\r\n                    integer /= (Integer) iteration;\r\n                    entry.setValue(integer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void normalizeTotalRankingPositions(Object[][] totalRankingPositions){\r\n        //add values in a col to get integer /= ...\r\n        Double integer;\r\n        for(int i = 0; i < totalRankingPositions.length; i++){\r\n            for(int j = 0; j < totalRankingPositions[i].length; j++){\r\n                integer = (Double) totalRankingPositions[j][i] * 1.0;\r\n                integer /= iteration;\r\n                totalRankingPositions[j][i] = integer;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void fillPotentialAggregatedWeightsRankingMap(ArrayList<Map<Object, Object>[]> objectCurrentPreferenceAcceptabilityIndices,\r\n                                                                ArrayList<Map<Object, Object>[]> objectPotentialPreferenceAcceptabilityIndices){\r\n        for(int object = 0; object < objectCurrentPreferenceAcceptabilityIndices.size(); object++){\r\n            for(int i = 0; i < objectCurrentPreferenceAcceptabilityIndices.get(object).length; i++) {\r\n                Integer multiplicator = objectCurrentPreferenceAcceptabilityIndices.get(object)[i].size();\r\n                for (Map.Entry<Object, Object> entry : objectPotentialPreferenceAcceptabilityIndices.get(object)[i].entrySet()) {\r\n                    entry.setValue((Double)objectCurrentPreferenceAcceptabilityIndices.get(object)[i].get(entry.getKey()) * multiplicator);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void fillPotentialJudgementAcceptabilityIndices(ArrayList<Map<Object, Object>[][]> objectCurrentJudgementAcceptabilityIndices,\r\n                                                                  ArrayList<Map<Object, Object>[][]> objectPotentialJudgementAcceptabilityIndices){\r\n        for(int object = 0; object < objectCurrentJudgementAcceptabilityIndices.size(); object++){\r\n            for(int i = 0; i < objectCurrentJudgementAcceptabilityIndices.get(object).length; i++){\r\n                for(int j = 0; j < objectCurrentJudgementAcceptabilityIndices.get(object)[i].length; j++){\r\n                    Integer multiplicator = objectCurrentJudgementAcceptabilityIndices.get(object)[i][j].size();\r\n                    for (Map.Entry<Object, Object> entry : objectPotentialJudgementAcceptabilityIndices.get(object)[i][j].entrySet()) {\r\n                        entry.setValue((Double)objectCurrentJudgementAcceptabilityIndices.get(object)[i][j].get(entry.getKey()) * multiplicator);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void countByRankingAndDecision(Object[] rankingPosition,\r\n                                                 ArrayList<Map<Object, Object>[][]> objectCurrentJudgementAcceptabilityIndices,\r\n                                                 Object[][] sawMatrix){\r\n        for(int i = 0; i < rankingPosition.length; i++){\r\n            if(Objects.equals(rankingPosition[i], 1)){\r\n                //add for rank one the counter for Judgements from saw by one\r\n                addRankOneToCJAI(i, objectCurrentJudgementAcceptabilityIndices, sawMatrix);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public static void addRankOneToCJAI(Integer rankOne,\r\n                                        ArrayList<Map<Object, Object>[][]> objectCurrentJudgementAcceptabilityIndices,\r\n                                        Object[][] sawMatrix){\r\n        for(int i = 0; i < sawMatrix.length; i++){\r\n            for(int j = 0; j < sawMatrix[i].length; j++){\r\n                //get old value\r\n                Double value = (Double) objectCurrentJudgementAcceptabilityIndices.get(rankOne)[i][j].get(sawMatrix[i][j]);\r\n                value += 1;\r\n                //set new value\r\n                objectCurrentJudgementAcceptabilityIndices.get(rankOne)[i][j].put(sawMatrix[i][j], value);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void countByRankingAndWeights(Object[] rankingPosition, ArrayList<Map<Object, Object>[]> currentPreferenceAcceptabilityIndices, Object[] sawWeights){\r\n        Integer rankOne = null;\r\n        for(int i = 0; i < rankingPosition.length; i++){\r\n            if(Objects.equals(rankingPosition[i], 1)){\r\n                rankOne = i;\r\n            }\r\n        }\r\n        for(int i = 0; i < sawWeights.length; i++){\r\n            //get old value\r\n            Double value = (Double) currentPreferenceAcceptabilityIndices.get(rankOne)[i].get(sawWeights[i]);\r\n            value += 1;\r\n            //set new value\r\n            currentPreferenceAcceptabilityIndices.get(rankOne)[i].put(sawWeights[i], value);\r\n        }\r\n    }\r\n\r\n    public static void fillWeightsMapWithZero(ArrayList<Object>[] aggregatedWeights, Map<Object, Object>[] aggregatedWeightsRankingMap){\r\n        for(int i = 0; i < aggregatedWeights.length; i++){\r\n            //create cell\r\n            Map<Object, Object> newMap = new HashMap<>();\r\n            for(int k = 0; k < aggregatedWeights[i].size(); k++){\r\n                //set countingMap to value\r\n                newMap.put(aggregatedWeights[i].get(k), 0.0);\r\n            }\r\n            aggregatedWeightsRankingMap[i] = newMap;\r\n        }\r\n    }\r\n\r\n    public static void fillMatrixMapWithZero(ArrayList<Object>[][] aggregatedMatrix, Map<Object, Object>[][] aggregatedMatrixRankingMap){\r\n        for(int i = 0; i < aggregatedMatrix.length; i++){\r\n            for(int j = 0; j < aggregatedMatrix[i].length; j++){\r\n                //create cell\r\n                Map<Object, Object> newMap = new HashMap<>();\r\n                for(int k = 0; k < aggregatedMatrix[i][j].size(); k++){\r\n                    //set countingMap to value\r\n                    newMap.put(aggregatedMatrix[i][j].get(k), 0.0);\r\n                }\r\n                aggregatedMatrixRankingMap[i][j] = newMap;\r\n            }\r\n        }\r\n    }\r\n\r\n    @NotNull\r\n    public static ArrayList<Object>[][] generateAggregatedMatrix(@NotNull ArrayList<Object[][]> dMList){\r\n        ArrayList<Object>[][] aggregatedMatrix = new ArrayList[dMList.get(0).length][dMList.get(0)[0].length];\r\n\r\n        //fill aggregated with empty lists\r\n        for(int i = 0; i < aggregatedMatrix.length; i++){\r\n            for(int j = 0; j < aggregatedMatrix[i].length; j++){\r\n                aggregatedMatrix[i][j] = new ArrayList<>();\r\n            }\r\n        }\r\n\r\n        //fill empty lists\r\n        for (Object[][] objects : dMList) {\r\n            for (int i = 0; i < aggregatedMatrix.length; i++) {\r\n                for (int j = 0; j < dMList.get(0)[0].length; j++) {\r\n                    if (!aggregatedMatrix[i][j].contains(objects[i][j])) {\r\n                        aggregatedMatrix[i][j].add(objects[i][j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return aggregatedMatrix;\r\n    }\r\n\r\n    @NotNull\r\n    public static ArrayList<Object>[] generateAggregatedWeights(@NotNull ArrayList<Object[]> dMWList){\r\n        ArrayList<Object>[] aggregatedWeights = new ArrayList[dMWList.get(0).length];\r\n\r\n        //fill aggregated with empty lists\r\n        for(int j = 0; j < aggregatedWeights.length; j++){\r\n            aggregatedWeights[j] = new ArrayList<>();\r\n        }\r\n\r\n        //fill empty lists\r\n        for(int k = 0; k < dMWList.size(); k++){\r\n            for(int j = 0; j < dMWList.get(0).length; j++){\r\n                if(!aggregatedWeights[j].contains(dMWList.get(k)[j])){\r\n                    aggregatedWeights[j].add(dMWList.get(k)[j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return aggregatedWeights;\r\n    }\r\n\r\n    @NotNull\r\n    public static ArrayList<Object[]> generateDecisionMakerWeightList(Class<?> clazz, int number, int length, int min, int max){\r\n        ArrayList<Object[]> dMWList = new ArrayList<>();\r\n        Object[] matrix;\r\n//        System.out.println(\"Generates decisionMakerWeightList: \");\r\n        for(int i = 0; i < number; i++){\r\n            matrix = Helper.generate1DArray(clazz, length, min, max);\r\n//            Helper.show1DArray(matrix);\r\n            dMWList.add(matrix);\r\n        }\r\n\r\n        return dMWList;\r\n    }\r\n\r\n    @NotNull\r\n    public static ArrayList<Object[][]> generateDecisionMakerList(Class<?> clazz, int number, int row, int col, int min, int max){\r\n        ArrayList<Object[][]> dMList = new ArrayList<>();\r\n        Object[][] matrix;\r\n\r\n        for(int i = 0; i < number; i++){\r\n            matrix = Helper.generate2DArray(clazz, row, col, min, max);\r\n            dMList.add(matrix);\r\n        }\r\n\r\n        return dMList;\r\n    }\r\n\r\n    public static void addRanking(Object[][] totalRanking, Object[] newRanking){\r\n        Double i1;\r\n        Integer x;\r\n        for(int i = 0; i < newRanking.length; i++){\r\n            x = (Integer) newRanking[i] - 1;\r\n            i1 = (Double)totalRanking[i][x];\r\n            i1 += 1;\r\n            totalRanking[i][x] = i1;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public static Object[] getRanksArray(Object[] array) {\r\n        Object[] result = new Object[array.length];\r\n\r\n        for (int i = 0; i < array.length; i++) {\r\n            int count = 0;\r\n            for (Object aDouble : array) {\r\n                if ((Double) aDouble > (Double) array[i]) {\r\n                    count++;\r\n                }\r\n            }\r\n            result[i] = count + 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MonteCarloHelper.java b/src/main/java/MonteCarloHelper.java
--- a/src/main/java/MonteCarloHelper.java	(revision 2dc7079d0648cb52a2b8247473e5c26e1c4de2fc)
+++ b/src/main/java/MonteCarloHelper.java	(date 1699427870528)
@@ -1,7 +1,10 @@
 import Enums.LexPreferenzes;
 import org.jetbrains.annotations.NotNull;
 
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
 import java.util.*;
+import java.util.concurrent.TimeUnit;
 
 public class MonteCarloHelper {
     public static int monteCarloIterations = 1000;
@@ -33,10 +36,9 @@
         System.out.println(list);
     }
 
-    public static List<Map<String, Object>>  showMonteCarloSaw(ArrayList<Object>[][] aggregatedMatrix, ArrayList<Object>[] aggregatedWeights, boolean full, boolean show){
+    public static List<Map<String, Object>>  showMonteCarloSaw(ArrayList<Object>[][] aggregatedMatrix, ArrayList<Object>[] aggregatedWeights, boolean full, boolean show) throws ParseException {
         alt = aggregatedMatrix.length;
         crit = aggregatedWeights.length;
-
         List<List<Object>> preferenceCombinationList = getPreferenceCombinations(aggregatedWeights);
         List<List<Object>> judgementCombinationList = getJudgementCombinations(aggregatedMatrix);
 
@@ -233,6 +235,8 @@
             System.out.println("\ncurrent entropy");
             System.out.println(getCurrentEntropy(rankAcceptabilityIndices));
         }
+
+
         return getLowestValue(judgementEntropyMatrix, preferenceEntropy);
     }
 
Index: src/main/java/Nutzwertanalyse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Enums.FuzzyJudgements;\r\nimport Enums.FuzzyPreferenzes;\r\nimport Enums.LexJudgements;\r\nimport Enums.LexPreferenzes;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nimport static Enums.LexPreferenzes.*;\r\nimport static Enums.LexJudgements.*;\r\n\r\npublic class Nutzwertanalyse {\r\n    public static final int alt = 5;\r\n    public static final int crit = 5;\r\n    public static final int numberOfDecisionMaker = 5;\r\n    public static final Class jugClazz = LexJudgements.class;\r\n    public static final Class prefClazz = LexPreferenzes.class;\r\n    public static final boolean full = true;\r\n    public static final boolean show = false;\r\n\r\n    public static ArrayList<Object>[][] getMatrix() {\r\n//        return new ArrayList[][]{\r\n//                {\r\n//                        new ArrayList<>(){{add(MP); add(P);}},\r\n//                        new ArrayList<>(){{add(F); add(G);}},\r\n//                        new ArrayList<>(){{add(MG); add(VG);}}\r\n//                },\r\n//                {\r\n//                        new ArrayList<>(){{add(MP); add(VG);}},\r\n//                        new ArrayList<>(){{add(F); add(MG);}},\r\n//                        new ArrayList<>(){{add(F); add(G);}}\r\n//                },\r\n//                {\r\n//                        new ArrayList<>(){{add(MG); add(P); add(VG);}},\r\n//                        new ArrayList<>(){{add(G); add(P);}},\r\n//                        new ArrayList<>(){{add(F); add(P);}}\r\n//                }\r\n//        };\r\n\r\n        return new ArrayList[][]{\r\n                {\r\n                        new ArrayList<>() {{add(JA);add(JB);}},\r\n                        new ArrayList<>() {{add(JA);add(JB);}},\r\n                        new ArrayList<>() {{add(JA);}},\r\n                        new ArrayList<>() {{add(JB);}},\r\n                        new ArrayList<>() {{add(JC);}},\r\n                        new ArrayList<>() {{add(JA);}}\r\n                },\r\n                {\r\n                        new ArrayList<>() {{add(JA);}},\r\n                        new ArrayList<>() {{add(JA);add(JB);add(JC);}},\r\n                        new ArrayList<>() {{add(JA);add(JB);}},\r\n                        new ArrayList<>() {{add(JA);add(JB);add(JC);}},\r\n                        new ArrayList<>() {{add(JB);}},\r\n                        new ArrayList<>() {{add(JB);add(JC);}},\r\n                },\r\n                {\r\n                        new ArrayList<>() {{add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                            add(JC);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JC);\r\n                        }},\r\n                },\r\n                {\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                            add(JC);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }}\r\n                },\r\n                {\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }}\r\n                },\r\n                {\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JA);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JC);\r\n                            add(JB);\r\n                        }},\r\n                        new ArrayList<>() {{\r\n                            add(JB);\r\n                        }}\r\n                }\r\n        };\r\n    }\r\n\r\n    public static ArrayList<Object>[] getWeights() {\r\n//        return new ArrayList[]{\r\n//                new ArrayList<>(){{add(H); add(ML); add(L);}},\r\n//                new ArrayList<>(){{add(L); add(MH);}},\r\n//                new ArrayList<>(){{add(M); add(H); add(L);}}\r\n//        };\r\n\r\n        return new ArrayList[]{\r\n                new ArrayList<>() {{add(PA);add(PB);add(PC);add(PD);add(PE);}},\r\n                new ArrayList<>() {{add(PA);add(PB);add(PC);}},\r\n                new ArrayList<>() {{add(PA);add(PB);add(PC);add(PF);}},\r\n                new ArrayList<>() {{add(PA);add(PB);add(PD);add(PE);add(PF);}},\r\n                new ArrayList<>() {{add(PA);add(PB);add(PD);add(PE);add(PF);}},\r\n                new ArrayList<>() {{add(PD);add(PE);add(PF);}}\r\n        };\r\n    }\r\n    private static String readTxt(String fileName) throws IOException {\r\n        File file = new File(fileName);\r\n        FileReader fr = new FileReader(file);\r\n        BufferedReader br = new BufferedReader(fr);\r\n        String line;\r\n        String txt = \"\";\r\n        while((line = br.readLine()) != null){\r\n            if(line.length() > 5){\r\n                txt += \"\\n\" + line;\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n\r\n    private static int getLines(String fileName) throws IOException {\r\n        File file = new File(fileName);\r\n        FileReader fr = new FileReader(file);\r\n        BufferedReader br = new BufferedReader(fr);\r\n        int counter = 0;\r\n        String line;\r\n        while((line = br.readLine()) != null){\r\n            if(line.length() > 5){\r\n                counter++;\r\n            }\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    private static boolean fileExist(String fileName) throws IOException {\r\n        File file = new File(fileName);\r\n        if (file.createNewFile()) {\r\n            System.out.println(\"File created: \" + file.getName());\r\n            return false;\r\n        }else {\r\n            System.out.println(\"File already exists: \" + fileName.substring(fileName.lastIndexOf(\"\\\\\")));\r\n            return true;\r\n        }\r\n    }\r\n    private static void writeTxt(String fileName, String newText) throws IOException {\r\n        File myObj = new File(fileName);\r\n        if (myObj.createNewFile()) {\r\n            System.out.println(\"File created: \" + myObj.getName());\r\n        }\r\n        String fileData = readTxt(fileName);\r\n        fileData = newText  + fileData;\r\n        FileOutputStream fos = new FileOutputStream(fileName);\r\n        fos.write(fileData.getBytes());\r\n        fos.flush();\r\n        fos.close();\r\n    }\r\n\r\n    public static void rechne(int numberOfDecisionMaker, int alt, int crit, Class jugClazz, Class prefClazz) throws IOException {\r\n        String berechnungsName;\r\n\r\n        if(jugClazz == LexJudgements.class){\r\n            berechnungsName = \"Lex \" + numberOfDecisionMaker + \" x \" + alt + \" x \" + crit;\r\n        }else {\r\n            berechnungsName = \"FuzzySAW \" + numberOfDecisionMaker + \" x \" + alt + \" x \" + crit;\r\n        }\r\n        String fileName = System.getProperty(\"user.dir\") + \"\\\\src\\\\main\\\\resources\\\\Berechnungen\\\\\" + berechnungsName + \".txt\";\r\n        fileExist(fileName);\r\n\r\n        Date startDate = new Date();\r\n        Date endDate = new Date();\r\n        System.out.println(\"Start: \" + startDate);\r\n        double sum = 0;\r\n        int durchlaeufe = 100;\r\n        int probleme = 1000;\r\n        double overAllSum = 0;\r\n        int linesInFile = getLines(fileName);\r\n\r\n        for (int l = linesInFile; l < probleme; l++) {\r\n            ArrayList<Object[][]> decisionMakerList = MonteCarloHelper.generateDecisionMakerList(jugClazz, numberOfDecisionMaker, alt, crit, 1, 10);\r\n            ArrayList<Object[]> decisionMakerWeightsList = MonteCarloHelper.generateDecisionMakerWeightList(prefClazz, numberOfDecisionMaker, crit, 0, 1);\r\n            ArrayList<Object>[][] aggregatedMatrix = MonteCarloHelper.generateAggregatedMatrix(decisionMakerList);\r\n            ArrayList<Object>[] aggregatedWeights = MonteCarloHelper.generateAggregatedWeights(decisionMakerWeightsList);\r\n            //aggregatedMatrix = getMatrix();\r\n            //aggregatedWeights = getWeights();\r\n            int indivCounter = 0;\r\n            for (int k = 0; k < durchlaeufe; k++) {\r\n                List<Map<String, Object>> lowestValue = MonteCarloHelper.showMonteCarloSaw(aggregatedMatrix, aggregatedWeights, full, show);\r\n                indivCounter++;\r\n                while (!containsZero(lowestValue)) {\r\n                    getRandomPath(aggregatedMatrix, aggregatedWeights, lowestValue);\r\n                    lowestValue = MonteCarloHelper.showMonteCarloSaw(aggregatedMatrix, aggregatedWeights, full, show);\r\n                    indivCounter++;\r\n                }\r\n//                System.out.println(\"Pfadlänge: \" + indivCounter);\r\n                sum += indivCounter;\r\n                indivCounter = 0;\r\n                aggregatedMatrix = MonteCarloHelper.generateAggregatedMatrix(decisionMakerList);\r\n                aggregatedWeights = MonteCarloHelper.generateAggregatedWeights(decisionMakerWeightsList);\r\n//                aggregatedMatrix = getMatrix();\r\n//                aggregatedWeights = getWeights();\r\n            }\r\n            decisionMakerWeightsList = MonteCarloHelper.generateDecisionMakerWeightList(FuzzyPreferenzes.class, numberOfDecisionMaker, alt, 0, 1);\r\n            decisionMakerList = MonteCarloHelper.generateDecisionMakerList(FuzzyJudgements.class, numberOfDecisionMaker, alt, crit, 1, 10);\r\n            aggregatedMatrix = MonteCarloHelper.generateAggregatedMatrix(decisionMakerList);\r\n            aggregatedWeights = MonteCarloHelper.generateAggregatedWeights(decisionMakerWeightsList);\r\n            endDate = new Date();\r\n            writeTxt(fileName, l + \" Durchschnittliche Pfadlänge = \" + sum / durchlaeufe + \" : \" + endDate);\r\n            System.out.println(l + \" Durchschnittliche Pfadlänge = \" + sum / durchlaeufe + \" : \" + endDate);\r\n            if(sum / durchlaeufe == 1000){\r\n                Helper.show2DArray(aggregatedMatrix);\r\n                Helper.show1DArray(aggregatedWeights);\r\n            }\r\n            overAllSum += sum;\r\n            sum = 0;\r\n        }\r\n        System.out.println(berechnungsName + \" done.\");\r\n        System.out.println(\"End: \" + endDate);\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        int[] numberOfDecisionMakers = {3,4,5,6};\r\n        int[] alt = {3,4,5,6,7,8,9,10};\r\n        int[] crit = {3,4,5,6};\r\n        Class[] jugdClazz = {FuzzyJudgements.class};\r\n        Class[] prefClazz = {FuzzyPreferenzes.class};\r\n\r\n\r\n        for(int i = 0; i < numberOfDecisionMakers.length; i++){\r\n            for (int j = 0; j < alt.length; j++){\r\n                for(int k = 0; k < crit.length; k++){\r\n                    for(int l = 0; l < jugdClazz.length; l++){\r\n                        rechne(numberOfDecisionMakers[i], alt[j], crit[k], jugdClazz[l], prefClazz[l]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        /*\r\n        19.10 13 Uhr\r\n\r\n        - adm und its\r\n        - nicht quadratisches problem testen\r\n        - berechnungszeit checken\r\n            + probleme generieren, aggregierte generieren\r\n            + berechnungsmethode(lex, saw)\r\n            + kombinationen\r\n            + statistik Matrizen\r\n        Berechnung:\r\n            - 1 Pfad mit idealauflösung 3,5,5, 7 klassen, 1000 Probleme\r\n            - 100 Pfade mit zufallsauflösung\r\n            - wenn k unter 1000 soll voll gerechnet werden\r\n            - 1000 Probleme\r\n            - Anzahl der DM:    3,4,5,6\r\n            - Anzahl der Crit:  3,4,5,6,7,8,9,10\r\n            - Anzahl der Alt:   3,4,5,6\r\n        - zufällige pfade wählen\r\n        - Fuzzy 5 lex 5 als Standard\r\n        - danach fuzzy 3 lex 3\r\n        - danach fuzzy 7 lex 7\r\n        - nicht nur die niedrigsten Werte der entropie ausgeben lassen sondern die niedrigsten 3-5\r\n        Teststudie 24.10.\r\n        - gedanken zum ersten intro machen und durchführen\r\n        - flyer oder link für aktivitäten heraussuchen damit bewertet werden kann\r\n        - mit vorgesetzten sprechen für zeitlichen ablauf\r\n         */\r\n\r\n\r\n        /*\r\n        - überprüfe automatisch bis wo bereits gerechnet wurde und setze es fort\r\n        - Montecarlo 10.000?\r\n        - Ab wie vielen Kombinationsmöglichgkeiten kann random die matrix erstellt werden?\r\n        + speicher von zwischenständen in file\r\n        + einlesen von abgespeicherten daten\r\n        + erste berechnungen\r\n        + bug bei nicht quadratischen problemen\r\n        - zählen bei optimierter variante\r\n        + neue zufallsbildung von instanzen da out of memory\r\n        - dauerschleifen durch reset beenden? reicht while lowest entropy < 0.1?\r\n            - abbruch : wenn bei rankac bei rang 1 mehrfach 1 vorkommt\r\n        + Termin Sonntag 26.11. -> 19.11.\r\n         */\r\n    }\r\n\r\n    public static boolean containsZero(List<Map<String, Object>> lowestValue){\r\n        for(Map map : lowestValue){\r\n            if((Double) map.get(\"lowestValue\") == 0){\r\n               return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void getIdealPath(ArrayList<Object>[][] aggregatedMatrix, ArrayList<Object>[] aggregatedWeights, Map<String, Object> lowestValue) {\r\n        if ((Boolean) lowestValue.get(\"lowestValueIsJudgement\")) {\r\n            aggregatedMatrix[(Integer) lowestValue.get(\"lowestI\")][(Integer) lowestValue.get(\"lowestJ\")] = new ArrayList<>();\r\n            aggregatedMatrix[(Integer) lowestValue.get(\"lowestI\")][(Integer) lowestValue.get(\"lowestJ\")].add(lowestValue.get(\"lowestKey\"));\r\n        } else {\r\n            aggregatedWeights[(Integer) lowestValue.get(\"lowestI\")] = new ArrayList<>();\r\n            aggregatedWeights[(Integer) lowestValue.get(\"lowestI\")].add(lowestValue.get(\"lowestKey\"));\r\n        }\r\n    }\r\n\r\n    public static void getRandomPath(ArrayList<Object>[][] aggregatedMatrix, ArrayList<Object>[] aggregatedWeights, List<Map<String, Object>>  lowestValue) {\r\n        Random random = new Random();\r\n        for(Map<String, Object> map : lowestValue){\r\n            if ((Boolean) map.get(\"lowestValueIsJudgement\")) {\r\n                if(aggregatedMatrix[(Integer) map.get(\"lowestI\")][(Integer) map.get(\"lowestJ\")].size() > 1){\r\n                    Integer randomNumber = random.nextInt(aggregatedMatrix[(Integer) map.get(\"lowestI\")][(Integer) map.get(\"lowestJ\")].size());\r\n                    Object randomObject = aggregatedMatrix[(Integer) map.get(\"lowestI\")][(Integer) map.get(\"lowestJ\")].get(randomNumber);\r\n                    aggregatedMatrix[(Integer) map.get(\"lowestI\")][(Integer) map.get(\"lowestJ\")] = new ArrayList<>();\r\n                    aggregatedMatrix[(Integer) map.get(\"lowestI\")][(Integer) map.get(\"lowestJ\")].add(randomObject);\r\n                    break;\r\n                }\r\n\r\n            } else {\r\n                if(aggregatedWeights[(Integer) map.get(\"lowestI\")].size() > 1){\r\n                    Integer randomNumber = random.nextInt(aggregatedWeights[(Integer) map.get(\"lowestI\")].size());\r\n                    Object randomObject = aggregatedWeights[(Integer) map.get(\"lowestI\")].get(randomNumber);\r\n                    aggregatedWeights[(Integer) map.get(\"lowestI\")] = new ArrayList<>();\r\n                    aggregatedWeights[(Integer) map.get(\"lowestI\")].add(randomObject);\r\n                    break;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Nutzwertanalyse.java b/src/main/java/Nutzwertanalyse.java
--- a/src/main/java/Nutzwertanalyse.java	(revision 2dc7079d0648cb52a2b8247473e5c26e1c4de2fc)
+++ b/src/main/java/Nutzwertanalyse.java	(date 1699427893741)
@@ -4,6 +4,7 @@
 import Enums.LexPreferenzes;
 
 import java.io.*;
+import java.text.ParseException;
 import java.util.*;
 
 import static Enums.LexPreferenzes.*;
@@ -215,7 +216,7 @@
         fos.close();
     }
 
-    public static void rechne(int numberOfDecisionMaker, int alt, int crit, Class jugClazz, Class prefClazz) throws IOException {
+    public static void rechne(int numberOfDecisionMaker, int alt, int crit, Class jugClazz, Class prefClazz) throws IOException, ParseException {
         String berechnungsName;
 
         if(jugClazz == LexJudgements.class){
@@ -277,7 +278,7 @@
         System.out.println("End: " + endDate);
     }
 
-    public static void main(String[] args) throws IOException {
+    public static void main(String[] args) throws IOException, ParseException {
         int[] numberOfDecisionMakers = {3,4,5,6};
         int[] alt = {3,4,5,6,7,8,9,10};
         int[] crit = {3,4,5,6};
Index: src/main/resources/Berechnungen/FuzzySAW 3 x 7 x 4.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>862 Durchschnittliche Pfadlänge = 14.59 : Wed Nov 08 07:41:57 CET 2023\r\n861 Durchschnittliche Pfadlänge = 13.79 : Wed Nov 08 07:41:54 CET 2023\r\n860 Durchschnittliche Pfadlänge = 11.72 : Wed Nov 08 07:41:51 CET 2023\r\n859 Durchschnittliche Pfadlänge = 12.28 : Wed Nov 08 07:41:48 CET 2023\r\n858 Durchschnittliche Pfadlänge = 10.45 : Wed Nov 08 07:41:46 CET 2023\r\n857 Durchschnittliche Pfadlänge = 12.57 : Wed Nov 08 07:41:43 CET 2023\r\n856 Durchschnittliche Pfadlänge = 13.7 : Wed Nov 08 07:41:41 CET 2023\r\n855 Durchschnittliche Pfadlänge = 12.51 : Wed Nov 08 07:41:38 CET 2023\r\n854 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 07:41:36 CET 2023\r\n853 Durchschnittliche Pfadlänge = 12.17 : Wed Nov 08 07:41:33 CET 2023\r\n852 Durchschnittliche Pfadlänge = 13.82 : Wed Nov 08 07:41:31 CET 2023\r\n851 Durchschnittliche Pfadlänge = 14.59 : Wed Nov 08 07:41:28 CET 2023\r\n850 Durchschnittliche Pfadlänge = 12.41 : Wed Nov 08 07:41:25 CET 2023\r\n849 Durchschnittliche Pfadlänge = 10.44 : Wed Nov 08 07:41:22 CET 2023\r\n848 Durchschnittliche Pfadlänge = 13.02 : Wed Nov 08 07:41:20 CET 2023\r\n847 Durchschnittliche Pfadlänge = 8.98 : Wed Nov 08 07:41:18 CET 2023\r\n846 Durchschnittliche Pfadlänge = 11.76 : Wed Nov 08 07:41:16 CET 2023\r\n845 Durchschnittliche Pfadlänge = 10.87 : Wed Nov 08 07:41:13 CET 2023\r\n844 Durchschnittliche Pfadlänge = 11.74 : Wed Nov 08 07:41:11 CET 2023\r\n843 Durchschnittliche Pfadlänge = 13.02 : Wed Nov 08 07:41:09 CET 2023\r\n842 Durchschnittliche Pfadlänge = 13.15 : Wed Nov 08 07:41:06 CET 2023\r\n841 Durchschnittliche Pfadlänge = 8.53 : Wed Nov 08 07:41:04 CET 2023\r\n840 Durchschnittliche Pfadlänge = 9.17 : Wed Nov 08 07:41:02 CET 2023\r\n839 Durchschnittliche Pfadlänge = 5.54 : Wed Nov 08 07:41:00 CET 2023\r\n838 Durchschnittliche Pfadlänge = 9.96 : Wed Nov 08 07:40:59 CET 2023\r\n837 Durchschnittliche Pfadlänge = 9.14 : Wed Nov 08 07:40:57 CET 2023\r\n836 Durchschnittliche Pfadlänge = 11.12 : Wed Nov 08 07:40:55 CET 2023\r\n835 Durchschnittliche Pfadlänge = 14.63 : Wed Nov 08 07:40:53 CET 2023\r\n834 Durchschnittliche Pfadlänge = 10.82 : Wed Nov 08 07:40:50 CET 2023\r\n833 Durchschnittliche Pfadlänge = 12.26 : Wed Nov 08 07:40:48 CET 2023\r\n832 Durchschnittliche Pfadlänge = 13.62 : Wed Nov 08 07:40:45 CET 2023\r\n831 Durchschnittliche Pfadlänge = 12.08 : Wed Nov 08 07:40:42 CET 2023\r\n830 Durchschnittliche Pfadlänge = 15.24 : Wed Nov 08 07:40:40 CET 2023\r\n829 Durchschnittliche Pfadlänge = 12.7 : Wed Nov 08 07:40:37 CET 2023\r\n828 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 07:40:34 CET 2023\r\n827 Durchschnittliche Pfadlänge = 11.28 : Wed Nov 08 07:40:32 CET 2023\r\n826 Durchschnittliche Pfadlänge = 12.77 : Wed Nov 08 07:40:30 CET 2023\r\n825 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 07:40:27 CET 2023\r\n824 Durchschnittliche Pfadlänge = 11.13 : Wed Nov 08 07:40:25 CET 2023\r\n823 Durchschnittliche Pfadlänge = 12.14 : Wed Nov 08 07:40:22 CET 2023\r\n822 Durchschnittliche Pfadlänge = 10.59 : Wed Nov 08 07:40:20 CET 2023\r\n821 Durchschnittliche Pfadlänge = 14.48 : Wed Nov 08 07:40:18 CET 2023\r\n820 Durchschnittliche Pfadlänge = 12.96 : Wed Nov 08 07:40:15 CET 2023\r\n819 Durchschnittliche Pfadlänge = 11.92 : Wed Nov 08 07:40:12 CET 2023\r\n818 Durchschnittliche Pfadlänge = 11.24 : Wed Nov 08 07:40:10 CET 2023\r\n817 Durchschnittliche Pfadlänge = 12.36 : Wed Nov 08 07:40:08 CET 2023\r\n816 Durchschnittliche Pfadlänge = 11.82 : Wed Nov 08 07:40:05 CET 2023\r\n815 Durchschnittliche Pfadlänge = 12.12 : Wed Nov 08 07:40:03 CET 2023\r\n814 Durchschnittliche Pfadlänge = 9.85 : Wed Nov 08 07:40:00 CET 2023\r\n813 Durchschnittliche Pfadlänge = 14.99 : Wed Nov 08 07:39:58 CET 2023\r\n812 Durchschnittliche Pfadlänge = 13.88 : Wed Nov 08 07:39:55 CET 2023\r\n811 Durchschnittliche Pfadlänge = 11.7 : Wed Nov 08 07:39:52 CET 2023\r\n810 Durchschnittliche Pfadlänge = 12.06 : Wed Nov 08 07:39:50 CET 2023\r\n809 Durchschnittliche Pfadlänge = 12.43 : Wed Nov 08 07:39:47 CET 2023\r\n808 Durchschnittliche Pfadlänge = 12.75 : Wed Nov 08 07:39:45 CET 2023\r\n807 Durchschnittliche Pfadlänge = 13.91 : Wed Nov 08 07:39:42 CET 2023\r\n806 Durchschnittliche Pfadlänge = 10.36 : Wed Nov 08 07:39:39 CET 2023\r\n805 Durchschnittliche Pfadlänge = 11.38 : Wed Nov 08 07:39:37 CET 2023\r\n804 Durchschnittliche Pfadlänge = 14.43 : Wed Nov 08 07:39:35 CET 2023\r\n803 Durchschnittliche Pfadlänge = 13.24 : Wed Nov 08 07:39:31 CET 2023\r\n802 Durchschnittliche Pfadlänge = 11.43 : Wed Nov 08 07:39:29 CET 2023\r\n801 Durchschnittliche Pfadlänge = 13.31 : Wed Nov 08 07:39:26 CET 2023\r\n800 Durchschnittliche Pfadlänge = 13.6 : Wed Nov 08 07:39:24 CET 2023\r\n799 Durchschnittliche Pfadlänge = 8.66 : Wed Nov 08 07:39:21 CET 2023\r\n798 Durchschnittliche Pfadlänge = 12.67 : Wed Nov 08 07:39:19 CET 2023\r\n797 Durchschnittliche Pfadlänge = 13.09 : Wed Nov 08 07:39:17 CET 2023\r\n796 Durchschnittliche Pfadlänge = 12.87 : Wed Nov 08 07:39:14 CET 2023\r\n795 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 07:39:11 CET 2023\r\n794 Durchschnittliche Pfadlänge = 11.52 : Wed Nov 08 07:39:09 CET 2023\r\n793 Durchschnittliche Pfadlänge = 13.1 : Wed Nov 08 07:39:06 CET 2023\r\n792 Durchschnittliche Pfadlänge = 11.52 : Wed Nov 08 07:39:03 CET 2023\r\n791 Durchschnittliche Pfadlänge = 12.14 : Wed Nov 08 07:39:01 CET 2023\r\n790 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 07:38:59 CET 2023\r\n789 Durchschnittliche Pfadlänge = 11.8 : Wed Nov 08 07:38:56 CET 2023\r\n788 Durchschnittliche Pfadlänge = 11.04 : Wed Nov 08 07:38:54 CET 2023\r\n787 Durchschnittliche Pfadlänge = 12.49 : Wed Nov 08 07:38:51 CET 2023\r\n786 Durchschnittliche Pfadlänge = 12.85 : Wed Nov 08 07:38:49 CET 2023\r\n785 Durchschnittliche Pfadlänge = 10.97 : Wed Nov 08 07:38:46 CET 2023\r\n784 Durchschnittliche Pfadlänge = 11.77 : Wed Nov 08 07:38:44 CET 2023\r\n783 Durchschnittliche Pfadlänge = 13.06 : Wed Nov 08 07:38:41 CET 2023\r\n782 Durchschnittliche Pfadlänge = 12.76 : Wed Nov 08 07:38:39 CET 2023\r\n781 Durchschnittliche Pfadlänge = 11.04 : Wed Nov 08 07:38:36 CET 2023\r\n780 Durchschnittliche Pfadlänge = 11.71 : Wed Nov 08 07:38:34 CET 2023\r\n779 Durchschnittliche Pfadlänge = 11.27 : Wed Nov 08 07:38:32 CET 2023\r\n778 Durchschnittliche Pfadlänge = 15.39 : Wed Nov 08 07:38:29 CET 2023\r\n777 Durchschnittliche Pfadlänge = 11.83 : Wed Nov 08 07:38:26 CET 2023\r\n776 Durchschnittliche Pfadlänge = 14.28 : Wed Nov 08 07:38:24 CET 2023\r\n775 Durchschnittliche Pfadlänge = 11.86 : Wed Nov 08 07:38:21 CET 2023\r\n774 Durchschnittliche Pfadlänge = 12.74 : Wed Nov 08 07:38:18 CET 2023\r\n773 Durchschnittliche Pfadlänge = 12.94 : Wed Nov 08 07:38:16 CET 2023\r\n772 Durchschnittliche Pfadlänge = 12.7 : Wed Nov 08 07:38:13 CET 2023\r\n771 Durchschnittliche Pfadlänge = 9.68 : Wed Nov 08 07:38:10 CET 2023\r\n770 Durchschnittliche Pfadlänge = 12.82 : Wed Nov 08 07:38:08 CET 2023\r\n769 Durchschnittliche Pfadlänge = 12.13 : Wed Nov 08 07:38:06 CET 2023\r\n768 Durchschnittliche Pfadlänge = 9.07 : Wed Nov 08 07:38:03 CET 2023\r\n767 Durchschnittliche Pfadlänge = 12.72 : Wed Nov 08 07:38:02 CET 2023\r\n766 Durchschnittliche Pfadlänge = 10.97 : Wed Nov 08 07:37:59 CET 2023\r\n765 Durchschnittliche Pfadlänge = 12.13 : Wed Nov 08 07:37:57 CET 2023\r\n764 Durchschnittliche Pfadlänge = 13.66 : Wed Nov 08 07:37:54 CET 2023\r\n763 Durchschnittliche Pfadlänge = 9.88 : Wed Nov 08 07:37:51 CET 2023\r\n762 Durchschnittliche Pfadlänge = 9.44 : Wed Nov 08 07:37:49 CET 2023\r\n761 Durchschnittliche Pfadlänge = 11.66 : Wed Nov 08 07:37:48 CET 2023\r\n760 Durchschnittliche Pfadlänge = 12.77 : Wed Nov 08 07:37:45 CET 2023\r\n759 Durchschnittliche Pfadlänge = 12.18 : Wed Nov 08 07:37:43 CET 2023\r\n758 Durchschnittliche Pfadlänge = 13.67 : Wed Nov 08 07:37:40 CET 2023\r\n757 Durchschnittliche Pfadlänge = 10.72 : Wed Nov 08 07:37:37 CET 2023\r\n756 Durchschnittliche Pfadlänge = 10.39 : Wed Nov 08 07:37:35 CET 2023\r\n755 Durchschnittliche Pfadlänge = 13.53 : Wed Nov 08 07:37:33 CET 2023\r\n754 Durchschnittliche Pfadlänge = 11.21 : Wed Nov 08 07:37:30 CET 2023\r\n753 Durchschnittliche Pfadlänge = 11.07 : Wed Nov 08 07:37:28 CET 2023\r\n752 Durchschnittliche Pfadlänge = 10.3 : Wed Nov 08 07:37:26 CET 2023\r\n751 Durchschnittliche Pfadlänge = 12.02 : Wed Nov 08 07:37:23 CET 2023\r\n750 Durchschnittliche Pfadlänge = 12.16 : Wed Nov 08 07:37:21 CET 2023\r\n749 Durchschnittliche Pfadlänge = 10.66 : Wed Nov 08 07:37:19 CET 2023\r\n748 Durchschnittliche Pfadlänge = 11.43 : Wed Nov 08 07:37:16 CET 2023\r\n747 Durchschnittliche Pfadlänge = 11.95 : Wed Nov 08 07:37:14 CET 2023\r\n746 Durchschnittliche Pfadlänge = 12.95 : Wed Nov 08 07:37:12 CET 2023\r\n745 Durchschnittliche Pfadlänge = 12.17 : Wed Nov 08 07:37:09 CET 2023\r\n744 Durchschnittliche Pfadlänge = 14.43 : Wed Nov 08 07:37:06 CET 2023\r\n743 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:37:03 CET 2023\r\n742 Durchschnittliche Pfadlänge = 12.78 : Wed Nov 08 07:37:01 CET 2023\r\n741 Durchschnittliche Pfadlänge = 12.25 : Wed Nov 08 07:36:58 CET 2023\r\n740 Durchschnittliche Pfadlänge = 12.59 : Wed Nov 08 07:36:56 CET 2023\r\n739 Durchschnittliche Pfadlänge = 10.24 : Wed Nov 08 07:36:53 CET 2023\r\n738 Durchschnittliche Pfadlänge = 13.01 : Wed Nov 08 07:36:51 CET 2023\r\n737 Durchschnittliche Pfadlänge = 10.18 : Wed Nov 08 07:36:48 CET 2023\r\n736 Durchschnittliche Pfadlänge = 12.3 : Wed Nov 08 07:36:46 CET 2023\r\n735 Durchschnittliche Pfadlänge = 10.88 : Wed Nov 08 07:36:44 CET 2023\r\n734 Durchschnittliche Pfadlänge = 12.63 : Wed Nov 08 07:36:42 CET 2023\r\n733 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 07:36:39 CET 2023\r\n732 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 07:36:37 CET 2023\r\n731 Durchschnittliche Pfadlänge = 11.11 : Wed Nov 08 07:36:34 CET 2023\r\n730 Durchschnittliche Pfadlänge = 9.79 : Wed Nov 08 07:36:32 CET 2023\r\n729 Durchschnittliche Pfadlänge = 12.51 : Wed Nov 08 07:36:30 CET 2023\r\n728 Durchschnittliche Pfadlänge = 12.18 : Wed Nov 08 07:36:27 CET 2023\r\n727 Durchschnittliche Pfadlänge = 13.96 : Wed Nov 08 07:36:25 CET 2023\r\n726 Durchschnittliche Pfadlänge = 13.33 : Wed Nov 08 07:36:22 CET 2023\r\n725 Durchschnittliche Pfadlänge = 12.87 : Wed Nov 08 07:36:19 CET 2023\r\n724 Durchschnittliche Pfadlänge = 11.11 : Wed Nov 08 07:36:17 CET 2023\r\n723 Durchschnittliche Pfadlänge = 9.35 : Wed Nov 08 07:36:14 CET 2023\r\n722 Durchschnittliche Pfadlänge = 12.33 : Wed Nov 08 07:36:12 CET 2023\r\n721 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 07:36:10 CET 2023\r\n720 Durchschnittliche Pfadlänge = 12.35 : Wed Nov 08 07:36:07 CET 2023\r\n719 Durchschnittliche Pfadlänge = 13.58 : Wed Nov 08 07:36:05 CET 2023\r\n718 Durchschnittliche Pfadlänge = 14.74 : Wed Nov 08 07:36:02 CET 2023\r\n717 Durchschnittliche Pfadlänge = 11.99 : Wed Nov 08 07:35:59 CET 2023\r\n716 Durchschnittliche Pfadlänge = 10.34 : Wed Nov 08 07:35:57 CET 2023\r\n715 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 07:35:55 CET 2023\r\n714 Durchschnittliche Pfadlänge = 13.2 : Wed Nov 08 07:35:52 CET 2023\r\n713 Durchschnittliche Pfadlänge = 12.98 : Wed Nov 08 07:35:49 CET 2023\r\n712 Durchschnittliche Pfadlänge = 13.84 : Wed Nov 08 07:35:47 CET 2023\r\n711 Durchschnittliche Pfadlänge = 9.62 : Wed Nov 08 07:35:44 CET 2023\r\n710 Durchschnittliche Pfadlänge = 11.52 : Wed Nov 08 07:35:42 CET 2023\r\n709 Durchschnittliche Pfadlänge = 10.21 : Wed Nov 08 07:35:40 CET 2023\r\n708 Durchschnittliche Pfadlänge = 15.09 : Wed Nov 08 07:35:38 CET 2023\r\n707 Durchschnittliche Pfadlänge = 13.99 : Wed Nov 08 07:35:34 CET 2023\r\n706 Durchschnittliche Pfadlänge = 8.48 : Wed Nov 08 07:35:32 CET 2023\r\n705 Durchschnittliche Pfadlänge = 10.25 : Wed Nov 08 07:35:30 CET 2023\r\n704 Durchschnittliche Pfadlänge = 12.6 : Wed Nov 08 07:35:28 CET 2023\r\n703 Durchschnittliche Pfadlänge = 11.7 : Wed Nov 08 07:35:25 CET 2023\r\n702 Durchschnittliche Pfadlänge = 11.81 : Wed Nov 08 07:35:23 CET 2023\r\n701 Durchschnittliche Pfadlänge = 13.7 : Wed Nov 08 07:35:20 CET 2023\r\n700 Durchschnittliche Pfadlänge = 13.76 : Wed Nov 08 07:35:18 CET 2023\r\n699 Durchschnittliche Pfadlänge = 12.95 : Wed Nov 08 07:35:15 CET 2023\r\n698 Durchschnittliche Pfadlänge = 12.75 : Wed Nov 08 07:35:12 CET 2023\r\n697 Durchschnittliche Pfadlänge = 13.68 : Wed Nov 08 07:35:10 CET 2023\r\n696 Durchschnittliche Pfadlänge = 11.02 : Wed Nov 08 07:35:07 CET 2023\r\n695 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 07:35:05 CET 2023\r\n694 Durchschnittliche Pfadlänge = 11.02 : Wed Nov 08 07:35:02 CET 2023\r\n693 Durchschnittliche Pfadlänge = 13.15 : Wed Nov 08 07:35:00 CET 2023\r\n692 Durchschnittliche Pfadlänge = 12.34 : Wed Nov 08 07:34:57 CET 2023\r\n691 Durchschnittliche Pfadlänge = 10.37 : Wed Nov 08 07:34:55 CET 2023\r\n690 Durchschnittliche Pfadlänge = 8.12 : Wed Nov 08 07:34:53 CET 2023\r\n689 Durchschnittliche Pfadlänge = 10.14 : Wed Nov 08 07:34:51 CET 2023\r\n688 Durchschnittliche Pfadlänge = 11.14 : Wed Nov 08 07:34:49 CET 2023\r\n687 Durchschnittliche Pfadlänge = 11.84 : Wed Nov 08 07:34:47 CET 2023\r\n686 Durchschnittliche Pfadlänge = 13.94 : Wed Nov 08 07:34:44 CET 2023\r\n685 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 07:34:41 CET 2023\r\n684 Durchschnittliche Pfadlänge = 15.09 : Wed Nov 08 07:34:39 CET 2023\r\n683 Durchschnittliche Pfadlänge = 11.54 : Wed Nov 08 07:34:36 CET 2023\r\n682 Durchschnittliche Pfadlänge = 11.78 : Wed Nov 08 07:34:34 CET 2023\r\n681 Durchschnittliche Pfadlänge = 8.94 : Wed Nov 08 07:34:31 CET 2023\r\n680 Durchschnittliche Pfadlänge = 11.22 : Wed Nov 08 07:34:30 CET 2023\r\n679 Durchschnittliche Pfadlänge = 11.15 : Wed Nov 08 07:34:27 CET 2023\r\n678 Durchschnittliche Pfadlänge = 14.49 : Wed Nov 08 07:34:25 CET 2023\r\n677 Durchschnittliche Pfadlänge = 10.92 : Wed Nov 08 07:34:22 CET 2023\r\n676 Durchschnittliche Pfadlänge = 10.15 : Wed Nov 08 07:34:20 CET 2023\r\n675 Durchschnittliche Pfadlänge = 12.1 : Wed Nov 08 07:34:18 CET 2023\r\n674 Durchschnittliche Pfadlänge = 13.53 : Wed Nov 08 07:34:15 CET 2023\r\n673 Durchschnittliche Pfadlänge = 12.64 : Wed Nov 08 07:34:12 CET 2023\r\n672 Durchschnittliche Pfadlänge = 14.43 : Wed Nov 08 07:34:10 CET 2023\r\n671 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 07:34:07 CET 2023\r\n670 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 07:34:04 CET 2023\r\n669 Durchschnittliche Pfadlänge = 12.28 : Wed Nov 08 07:34:02 CET 2023\r\n668 Durchschnittliche Pfadlänge = 12.45 : Wed Nov 08 07:34:00 CET 2023\r\n667 Durchschnittliche Pfadlänge = 13.58 : Wed Nov 08 07:33:57 CET 2023\r\n666 Durchschnittliche Pfadlänge = 12.88 : Wed Nov 08 07:33:54 CET 2023\r\n665 Durchschnittliche Pfadlänge = 12.38 : Wed Nov 08 07:33:52 CET 2023\r\n664 Durchschnittliche Pfadlänge = 12.54 : Wed Nov 08 07:33:49 CET 2023\r\n663 Durchschnittliche Pfadlänge = 10.13 : Wed Nov 08 07:33:47 CET 2023\r\n662 Durchschnittliche Pfadlänge = 10.07 : Wed Nov 08 07:33:45 CET 2023\r\n661 Durchschnittliche Pfadlänge = 12.79 : Wed Nov 08 07:33:43 CET 2023\r\n660 Durchschnittliche Pfadlänge = 13.74 : Wed Nov 08 07:33:40 CET 2023\r\n659 Durchschnittliche Pfadlänge = 11.43 : Wed Nov 08 07:33:37 CET 2023\r\n658 Durchschnittliche Pfadlänge = 9.99 : Wed Nov 08 07:33:35 CET 2023\r\n657 Durchschnittliche Pfadlänge = 14.79 : Wed Nov 08 07:33:33 CET 2023\r\n656 Durchschnittliche Pfadlänge = 9.82 : Wed Nov 08 07:33:30 CET 2023\r\n655 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 07:33:28 CET 2023\r\n654 Durchschnittliche Pfadlänge = 9.75 : Wed Nov 08 07:33:25 CET 2023\r\n653 Durchschnittliche Pfadlänge = 13.0 : Wed Nov 08 07:33:23 CET 2023\r\n652 Durchschnittliche Pfadlänge = 12.77 : Wed Nov 08 07:33:20 CET 2023\r\n651 Durchschnittliche Pfadlänge = 8.91 : Wed Nov 08 07:33:18 CET 2023\r\n650 Durchschnittliche Pfadlänge = 12.9 : Wed Nov 08 07:33:16 CET 2023\r\n649 Durchschnittliche Pfadlänge = 14.8 : Wed Nov 08 07:33:13 CET 2023\r\n648 Durchschnittliche Pfadlänge = 12.85 : Wed Nov 08 07:33:10 CET 2023\r\n647 Durchschnittliche Pfadlänge = 14.27 : Wed Nov 08 07:33:08 CET 2023\r\n646 Durchschnittliche Pfadlänge = 10.55 : Wed Nov 08 07:33:05 CET 2023\r\n645 Durchschnittliche Pfadlänge = 10.3 : Wed Nov 08 07:33:03 CET 2023\r\n644 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:33:01 CET 2023\r\n643 Durchschnittliche Pfadlänge = 7.55 : Wed Nov 08 07:32:58 CET 2023\r\n642 Durchschnittliche Pfadlänge = 8.94 : Wed Nov 08 07:32:57 CET 2023\r\n641 Durchschnittliche Pfadlänge = 12.72 : Wed Nov 08 07:32:55 CET 2023\r\n640 Durchschnittliche Pfadlänge = 10.86 : Wed Nov 08 07:32:52 CET 2023\r\n639 Durchschnittliche Pfadlänge = 12.97 : Wed Nov 08 07:32:50 CET 2023\r\n638 Durchschnittliche Pfadlänge = 10.73 : Wed Nov 08 07:32:47 CET 2023\r\n637 Durchschnittliche Pfadlänge = 11.12 : Wed Nov 08 07:32:45 CET 2023\r\n636 Durchschnittliche Pfadlänge = 9.39 : Wed Nov 08 07:32:43 CET 2023\r\n635 Durchschnittliche Pfadlänge = 9.74 : Wed Nov 08 07:32:41 CET 2023\r\n634 Durchschnittliche Pfadlänge = 8.21 : Wed Nov 08 07:32:39 CET 2023\r\n633 Durchschnittliche Pfadlänge = 11.83 : Wed Nov 08 07:32:37 CET 2023\r\n632 Durchschnittliche Pfadlänge = 13.02 : Wed Nov 08 07:32:35 CET 2023\r\n631 Durchschnittliche Pfadlänge = 12.74 : Wed Nov 08 07:32:32 CET 2023\r\n630 Durchschnittliche Pfadlänge = 11.69 : Wed Nov 08 07:32:30 CET 2023\r\n629 Durchschnittliche Pfadlänge = 13.22 : Wed Nov 08 07:32:27 CET 2023\r\n628 Durchschnittliche Pfadlänge = 14.43 : Wed Nov 08 07:32:25 CET 2023\r\n627 Durchschnittliche Pfadlänge = 10.05 : Wed Nov 08 07:32:22 CET 2023\r\n626 Durchschnittliche Pfadlänge = 11.79 : Wed Nov 08 07:32:20 CET 2023\r\n625 Durchschnittliche Pfadlänge = 12.79 : Wed Nov 08 07:32:17 CET 2023\r\n624 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 07:32:15 CET 2023\r\n623 Durchschnittliche Pfadlänge = 12.35 : Wed Nov 08 07:32:12 CET 2023\r\n622 Durchschnittliche Pfadlänge = 11.01 : Wed Nov 08 07:32:10 CET 2023\r\n621 Durchschnittliche Pfadlänge = 10.28 : Wed Nov 08 07:32:08 CET 2023\r\n620 Durchschnittliche Pfadlänge = 10.71 : Wed Nov 08 07:32:05 CET 2023\r\n619 Durchschnittliche Pfadlänge = 10.88 : Wed Nov 08 07:32:03 CET 2023\r\n618 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 07:32:01 CET 2023\r\n617 Durchschnittliche Pfadlänge = 8.2 : Wed Nov 08 07:31:58 CET 2023\r\n616 Durchschnittliche Pfadlänge = 14.06 : Wed Nov 08 07:31:57 CET 2023\r\n615 Durchschnittliche Pfadlänge = 12.76 : Wed Nov 08 07:31:54 CET 2023\r\n614 Durchschnittliche Pfadlänge = 15.09 : Wed Nov 08 07:31:51 CET 2023\r\n613 Durchschnittliche Pfadlänge = 13.05 : Wed Nov 08 07:31:48 CET 2023\r\n612 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 07:31:45 CET 2023\r\n611 Durchschnittliche Pfadlänge = 8.14 : Wed Nov 08 07:31:43 CET 2023\r\n610 Durchschnittliche Pfadlänge = 11.7 : Wed Nov 08 07:31:42 CET 2023\r\n609 Durchschnittliche Pfadlänge = 11.18 : Wed Nov 08 07:31:39 CET 2023\r\n608 Durchschnittliche Pfadlänge = 12.56 : Wed Nov 08 07:31:37 CET 2023\r\n607 Durchschnittliche Pfadlänge = 13.52 : Wed Nov 08 07:31:34 CET 2023\r\n606 Durchschnittliche Pfadlänge = 10.49 : Wed Nov 08 07:31:32 CET 2023\r\n605 Durchschnittliche Pfadlänge = 12.69 : Wed Nov 08 07:31:29 CET 2023\r\n604 Durchschnittliche Pfadlänge = 13.8 : Wed Nov 08 07:31:27 CET 2023\r\n603 Durchschnittliche Pfadlänge = 12.86 : Wed Nov 08 07:31:24 CET 2023\r\n602 Durchschnittliche Pfadlänge = 13.71 : Wed Nov 08 07:31:22 CET 2023\r\n601 Durchschnittliche Pfadlänge = 10.57 : Wed Nov 08 07:31:19 CET 2023\r\n600 Durchschnittliche Pfadlänge = 11.88 : Wed Nov 08 07:31:17 CET 2023\r\n599 Durchschnittliche Pfadlänge = 12.59 : Wed Nov 08 07:31:14 CET 2023\r\n598 Durchschnittliche Pfadlänge = 11.13 : Wed Nov 08 07:31:12 CET 2023\r\n597 Durchschnittliche Pfadlänge = 10.21 : Wed Nov 08 07:31:09 CET 2023\r\n596 Durchschnittliche Pfadlänge = 14.28 : Wed Nov 08 07:31:07 CET 2023\r\n595 Durchschnittliche Pfadlänge = 12.36 : Wed Nov 08 07:31:04 CET 2023\r\n594 Durchschnittliche Pfadlänge = 10.64 : Wed Nov 08 07:31:02 CET 2023\r\n593 Durchschnittliche Pfadlänge = 9.01 : Wed Nov 08 07:31:00 CET 2023\r\n592 Durchschnittliche Pfadlänge = 11.94 : Wed Nov 08 07:30:58 CET 2023\r\n591 Durchschnittliche Pfadlänge = 12.2 : Wed Nov 08 07:30:55 CET 2023\r\n590 Durchschnittliche Pfadlänge = 7.83 : Wed Nov 08 07:30:53 CET 2023\r\n589 Durchschnittliche Pfadlänge = 13.93 : Wed Nov 08 07:30:51 CET 2023\r\n588 Durchschnittliche Pfadlänge = 10.87 : Wed Nov 08 07:30:49 CET 2023\r\n587 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 07:30:46 CET 2023\r\n586 Durchschnittliche Pfadlänge = 13.58 : Wed Nov 08 07:30:44 CET 2023\r\n585 Durchschnittliche Pfadlänge = 14.73 : Wed Nov 08 07:30:41 CET 2023\r\n584 Durchschnittliche Pfadlänge = 11.55 : Wed Nov 08 07:30:38 CET 2023\r\n583 Durchschnittliche Pfadlänge = 12.37 : Wed Nov 08 07:30:36 CET 2023\r\n582 Durchschnittliche Pfadlänge = 12.9 : Wed Nov 08 07:30:33 CET 2023\r\n581 Durchschnittliche Pfadlänge = 12.87 : Wed Nov 08 07:30:31 CET 2023\r\n580 Durchschnittliche Pfadlänge = 13.37 : Wed Nov 08 07:30:28 CET 2023\r\n579 Durchschnittliche Pfadlänge = 13.53 : Wed Nov 08 07:30:25 CET 2023\r\n578 Durchschnittliche Pfadlänge = 13.6 : Wed Nov 08 07:30:23 CET 2023\r\n577 Durchschnittliche Pfadlänge = 11.19 : Wed Nov 08 07:30:20 CET 2023\r\n576 Durchschnittliche Pfadlänge = 9.95 : Wed Nov 08 07:30:18 CET 2023\r\n575 Durchschnittliche Pfadlänge = 9.54 : Wed Nov 08 07:30:16 CET 2023\r\n574 Durchschnittliche Pfadlänge = 9.12 : Wed Nov 08 07:30:14 CET 2023\r\n573 Durchschnittliche Pfadlänge = 13.45 : Wed Nov 08 07:30:12 CET 2023\r\n572 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 07:30:09 CET 2023\r\n571 Durchschnittliche Pfadlänge = 11.37 : Wed Nov 08 07:30:06 CET 2023\r\n570 Durchschnittliche Pfadlänge = 9.56 : Wed Nov 08 07:30:04 CET 2023\r\n569 Durchschnittliche Pfadlänge = 12.41 : Wed Nov 08 07:30:02 CET 2023\r\n568 Durchschnittliche Pfadlänge = 11.93 : Wed Nov 08 07:29:59 CET 2023\r\n567 Durchschnittliche Pfadlänge = 12.73 : Wed Nov 08 07:29:57 CET 2023\r\n566 Durchschnittliche Pfadlänge = 10.09 : Wed Nov 08 07:29:54 CET 2023\r\n565 Durchschnittliche Pfadlänge = 10.71 : Wed Nov 08 07:29:52 CET 2023\r\n564 Durchschnittliche Pfadlänge = 11.81 : Wed Nov 08 07:29:50 CET 2023\r\n563 Durchschnittliche Pfadlänge = 11.3 : Wed Nov 08 07:29:48 CET 2023\r\n562 Durchschnittliche Pfadlänge = 14.88 : Wed Nov 08 07:29:45 CET 2023\r\n561 Durchschnittliche Pfadlänge = 10.26 : Wed Nov 08 07:29:42 CET 2023\r\n560 Durchschnittliche Pfadlänge = 11.88 : Wed Nov 08 07:29:40 CET 2023\r\n559 Durchschnittliche Pfadlänge = 12.65 : Wed Nov 08 07:29:38 CET 2023\r\n558 Durchschnittliche Pfadlänge = 9.03 : Wed Nov 08 07:29:35 CET 2023\r\n557 Durchschnittliche Pfadlänge = 12.49 : Wed Nov 08 07:29:33 CET 2023\r\n556 Durchschnittliche Pfadlänge = 12.02 : Wed Nov 08 07:29:31 CET 2023\r\n555 Durchschnittliche Pfadlänge = 12.9 : Wed Nov 08 07:29:28 CET 2023\r\n554 Durchschnittliche Pfadlänge = 10.68 : Wed Nov 08 07:29:26 CET 2023\r\n553 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 07:29:23 CET 2023\r\n552 Durchschnittliche Pfadlänge = 9.88 : Wed Nov 08 07:29:21 CET 2023\r\n551 Durchschnittliche Pfadlänge = 13.71 : Wed Nov 08 07:29:19 CET 2023\r\n550 Durchschnittliche Pfadlänge = 10.77 : Wed Nov 08 07:29:16 CET 2023\r\n549 Durchschnittliche Pfadlänge = 13.06 : Wed Nov 08 07:29:14 CET 2023\r\n548 Durchschnittliche Pfadlänge = 14.47 : Wed Nov 08 07:29:11 CET 2023\r\n547 Durchschnittliche Pfadlänge = 14.67 : Wed Nov 08 07:29:08 CET 2023\r\n546 Durchschnittliche Pfadlänge = 13.12 : Wed Nov 08 07:29:05 CET 2023\r\n545 Durchschnittliche Pfadlänge = 11.49 : Wed Nov 08 07:29:02 CET 2023\r\n544 Durchschnittliche Pfadlänge = 12.72 : Wed Nov 08 07:29:00 CET 2023\r\n543 Durchschnittliche Pfadlänge = 14.23 : Wed Nov 08 07:28:57 CET 2023\r\n542 Durchschnittliche Pfadlänge = 9.95 : Wed Nov 08 07:28:53 CET 2023\r\n541 Durchschnittliche Pfadlänge = 13.05 : Wed Nov 08 07:28:51 CET 2023\r\n540 Durchschnittliche Pfadlänge = 14.57 : Wed Nov 08 07:28:48 CET 2023\r\n539 Durchschnittliche Pfadlänge = 11.32 : Wed Nov 08 07:28:45 CET 2023\r\n538 Durchschnittliche Pfadlänge = 11.85 : Wed Nov 08 07:28:42 CET 2023\r\n537 Durchschnittliche Pfadlänge = 12.8 : Wed Nov 08 07:28:40 CET 2023\r\n536 Durchschnittliche Pfadlänge = 11.77 : Wed Nov 08 07:28:37 CET 2023\r\n535 Durchschnittliche Pfadlänge = 12.16 : Wed Nov 08 07:28:33 CET 2023\r\n534 Durchschnittliche Pfadlänge = 8.22 : Wed Nov 08 07:28:31 CET 2023\r\n533 Durchschnittliche Pfadlänge = 10.79 : Wed Nov 08 07:28:29 CET 2023\r\n532 Durchschnittliche Pfadlänge = 12.61 : Wed Nov 08 07:28:27 CET 2023\r\n531 Durchschnittliche Pfadlänge = 13.33 : Wed Nov 08 07:28:24 CET 2023\r\n530 Durchschnittliche Pfadlänge = 9.58 : Wed Nov 08 07:28:22 CET 2023\r\n529 Durchschnittliche Pfadlänge = 7.14 : Wed Nov 08 07:28:20 CET 2023\r\n528 Durchschnittliche Pfadlänge = 10.66 : Wed Nov 08 07:28:18 CET 2023\r\n527 Durchschnittliche Pfadlänge = 12.75 : Wed Nov 08 07:28:16 CET 2023\r\n526 Durchschnittliche Pfadlänge = 11.54 : Wed Nov 08 07:28:13 CET 2023\r\n525 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 07:28:11 CET 2023\r\n524 Durchschnittliche Pfadlänge = 10.1 : Wed Nov 08 07:28:09 CET 2023\r\n523 Durchschnittliche Pfadlänge = 11.43 : Wed Nov 08 07:28:07 CET 2023\r\n522 Durchschnittliche Pfadlänge = 10.77 : Wed Nov 08 07:28:04 CET 2023\r\n521 Durchschnittliche Pfadlänge = 11.85 : Wed Nov 08 07:28:02 CET 2023\r\n520 Durchschnittliche Pfadlänge = 13.56 : Wed Nov 08 07:28:00 CET 2023\r\n519 Durchschnittliche Pfadlänge = 11.86 : Wed Nov 08 07:27:57 CET 2023\r\n518 Durchschnittliche Pfadlänge = 11.57 : Wed Nov 08 07:27:55 CET 2023\r\n517 Durchschnittliche Pfadlänge = 14.05 : Wed Nov 08 07:27:52 CET 2023\r\n516 Durchschnittliche Pfadlänge = 13.26 : Wed Nov 08 07:27:49 CET 2023\r\n515 Durchschnittliche Pfadlänge = 11.16 : Wed Nov 08 07:27:47 CET 2023\r\n514 Durchschnittliche Pfadlänge = 11.98 : Wed Nov 08 07:27:44 CET 2023\r\n513 Durchschnittliche Pfadlänge = 13.38 : Wed Nov 08 07:27:42 CET 2023\r\n512 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 07:27:39 CET 2023\r\n511 Durchschnittliche Pfadlänge = 11.61 : Wed Nov 08 07:27:37 CET 2023\r\n510 Durchschnittliche Pfadlänge = 11.54 : Wed Nov 08 07:27:34 CET 2023\r\n509 Durchschnittliche Pfadlänge = 16.03 : Wed Nov 08 07:27:31 CET 2023\r\n508 Durchschnittliche Pfadlänge = 12.93 : Wed Nov 08 07:27:27 CET 2023\r\n507 Durchschnittliche Pfadlänge = 11.04 : Wed Nov 08 07:27:24 CET 2023\r\n506 Durchschnittliche Pfadlänge = 10.12 : Wed Nov 08 07:27:22 CET 2023\r\n505 Durchschnittliche Pfadlänge = 12.57 : Wed Nov 08 07:27:20 CET 2023\r\n504 Durchschnittliche Pfadlänge = 9.82 : Wed Nov 08 07:27:17 CET 2023\r\n503 Durchschnittliche Pfadlänge = 12.28 : Wed Nov 08 07:27:14 CET 2023\r\n502 Durchschnittliche Pfadlänge = 12.72 : Wed Nov 08 07:27:11 CET 2023\r\n501 Durchschnittliche Pfadlänge = 10.46 : Wed Nov 08 07:27:08 CET 2023\r\n500 Durchschnittliche Pfadlänge = 12.88 : Wed Nov 08 07:27:06 CET 2023\r\n499 Durchschnittliche Pfadlänge = 15.1 : Wed Nov 08 07:27:03 CET 2023\r\n498 Durchschnittliche Pfadlänge = 10.43 : Wed Nov 08 07:27:00 CET 2023\r\n497 Durchschnittliche Pfadlänge = 14.25 : Wed Nov 08 07:26:58 CET 2023\r\n496 Durchschnittliche Pfadlänge = 9.62 : Wed Nov 08 07:26:55 CET 2023\r\n495 Durchschnittliche Pfadlänge = 13.14 : Wed Nov 08 07:26:53 CET 2023\r\n494 Durchschnittliche Pfadlänge = 9.84 : Wed Nov 08 07:26:51 CET 2023\r\n493 Durchschnittliche Pfadlänge = 10.9 : Wed Nov 08 07:26:49 CET 2023\r\n492 Durchschnittliche Pfadlänge = 10.59 : Wed Nov 08 07:26:47 CET 2023\r\n491 Durchschnittliche Pfadlänge = 10.84 : Wed Nov 08 07:26:44 CET 2023\r\n490 Durchschnittliche Pfadlänge = 13.39 : Wed Nov 08 07:26:42 CET 2023\r\n489 Durchschnittliche Pfadlänge = 12.27 : Wed Nov 08 07:26:39 CET 2023\r\n488 Durchschnittliche Pfadlänge = 12.14 : Wed Nov 08 07:26:37 CET 2023\r\n487 Durchschnittliche Pfadlänge = 12.54 : Wed Nov 08 07:26:34 CET 2023\r\n486 Durchschnittliche Pfadlänge = 15.06 : Wed Nov 08 07:26:32 CET 2023\r\n485 Durchschnittliche Pfadlänge = 12.93 : Wed Nov 08 07:26:29 CET 2023\r\n484 Durchschnittliche Pfadlänge = 13.11 : Wed Nov 08 07:26:26 CET 2023\r\n483 Durchschnittliche Pfadlänge = 11.71 : Wed Nov 08 07:26:24 CET 2023\r\n482 Durchschnittliche Pfadlänge = 11.23 : Wed Nov 08 07:26:21 CET 2023\r\n481 Durchschnittliche Pfadlänge = 11.69 : Wed Nov 08 07:26:19 CET 2023\r\n480 Durchschnittliche Pfadlänge = 14.55 : Wed Nov 08 07:26:17 CET 2023\r\n479 Durchschnittliche Pfadlänge = 9.67 : Wed Nov 08 07:26:13 CET 2023\r\n478 Durchschnittliche Pfadlänge = 14.21 : Wed Nov 08 07:26:12 CET 2023\r\n477 Durchschnittliche Pfadlänge = 10.86 : Wed Nov 08 07:26:09 CET 2023\r\n476 Durchschnittliche Pfadlänge = 12.11 : Wed Nov 08 07:26:06 CET 2023\r\n475 Durchschnittliche Pfadlänge = 11.57 : Wed Nov 08 07:26:04 CET 2023\r\n474 Durchschnittliche Pfadlänge = 11.24 : Wed Nov 08 07:26:02 CET 2023\r\n473 Durchschnittliche Pfadlänge = 12.01 : Wed Nov 08 07:25:59 CET 2023\r\n472 Durchschnittliche Pfadlänge = 15.12 : Wed Nov 08 07:25:57 CET 2023\r\n471 Durchschnittliche Pfadlänge = 12.52 : Wed Nov 08 07:25:54 CET 2023\r\n470 Durchschnittliche Pfadlänge = 12.16 : Wed Nov 08 07:25:51 CET 2023\r\n469 Durchschnittliche Pfadlänge = 11.6 : Wed Nov 08 07:25:49 CET 2023\r\n468 Durchschnittliche Pfadlänge = 11.05 : Wed Nov 08 07:25:46 CET 2023\r\n467 Durchschnittliche Pfadlänge = 10.76 : Wed Nov 08 07:25:44 CET 2023\r\n466 Durchschnittliche Pfadlänge = 13.04 : Wed Nov 08 07:25:42 CET 2023\r\n465 Durchschnittliche Pfadlänge = 13.26 : Wed Nov 08 07:25:39 CET 2023\r\n464 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 07:25:36 CET 2023\r\n463 Durchschnittliche Pfadlänge = 12.24 : Wed Nov 08 07:25:34 CET 2023\r\n462 Durchschnittliche Pfadlänge = 12.34 : Wed Nov 08 07:25:31 CET 2023\r\n461 Durchschnittliche Pfadlänge = 12.82 : Wed Nov 08 07:25:29 CET 2023\r\n460 Durchschnittliche Pfadlänge = 12.36 : Wed Nov 08 07:25:26 CET 2023\r\n459 Durchschnittliche Pfadlänge = 11.45 : Wed Nov 08 07:25:24 CET 2023\r\n458 Durchschnittliche Pfadlänge = 11.73 : Wed Nov 08 07:25:21 CET 2023\r\n457 Durchschnittliche Pfadlänge = 13.15 : Wed Nov 08 07:25:19 CET 2023\r\n456 Durchschnittliche Pfadlänge = 12.29 : Wed Nov 08 07:25:16 CET 2023\r\n455 Durchschnittliche Pfadlänge = 12.63 : Wed Nov 08 07:25:13 CET 2023\r\n454 Durchschnittliche Pfadlänge = 11.61 : Wed Nov 08 07:25:10 CET 2023\r\n453 Durchschnittliche Pfadlänge = 12.7 : Wed Nov 08 07:25:08 CET 2023\r\n452 Durchschnittliche Pfadlänge = 12.02 : Wed Nov 08 07:25:05 CET 2023\r\n451 Durchschnittliche Pfadlänge = 12.38 : Wed Nov 08 07:25:03 CET 2023\r\n450 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 07:25:00 CET 2023\r\n449 Durchschnittliche Pfadlänge = 11.42 : Wed Nov 08 07:24:58 CET 2023\r\n448 Durchschnittliche Pfadlänge = 13.25 : Wed Nov 08 07:24:56 CET 2023\r\n447 Durchschnittliche Pfadlänge = 9.78 : Wed Nov 08 07:24:53 CET 2023\r\n446 Durchschnittliche Pfadlänge = 13.74 : Wed Nov 08 07:24:51 CET 2023\r\n445 Durchschnittliche Pfadlänge = 12.38 : Wed Nov 08 07:24:48 CET 2023\r\n444 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:24:46 CET 2023\r\n443 Durchschnittliche Pfadlänge = 11.54 : Wed Nov 08 07:24:43 CET 2023\r\n442 Durchschnittliche Pfadlänge = 12.9 : Wed Nov 08 07:24:41 CET 2023\r\n441 Durchschnittliche Pfadlänge = 11.75 : Wed Nov 08 07:24:38 CET 2023\r\n440 Durchschnittliche Pfadlänge = 12.26 : Wed Nov 08 07:24:36 CET 2023\r\n439 Durchschnittliche Pfadlänge = 8.51 : Wed Nov 08 07:24:33 CET 2023\r\n438 Durchschnittliche Pfadlänge = 12.45 : Wed Nov 08 07:24:32 CET 2023\r\n437 Durchschnittliche Pfadlänge = 13.19 : Wed Nov 08 07:24:29 CET 2023\r\n436 Durchschnittliche Pfadlänge = 11.41 : Wed Nov 08 07:24:26 CET 2023\r\n435 Durchschnittliche Pfadlänge = 12.54 : Wed Nov 08 07:24:23 CET 2023\r\n434 Durchschnittliche Pfadlänge = 14.97 : Wed Nov 08 07:24:21 CET 2023\r\n433 Durchschnittliche Pfadlänge = 14.1 : Wed Nov 08 07:24:17 CET 2023\r\n432 Durchschnittliche Pfadlänge = 9.94 : Wed Nov 08 07:24:14 CET 2023\r\n431 Durchschnittliche Pfadlänge = 12.24 : Wed Nov 08 07:24:12 CET 2023\r\n430 Durchschnittliche Pfadlänge = 12.79 : Wed Nov 08 07:24:09 CET 2023\r\n429 Durchschnittliche Pfadlänge = 12.94 : Wed Nov 08 07:24:07 CET 2023\r\n428 Durchschnittliche Pfadlänge = 11.84 : Wed Nov 08 07:24:04 CET 2023\r\n427 Durchschnittliche Pfadlänge = 9.33 : Wed Nov 08 07:24:01 CET 2023\r\n426 Durchschnittliche Pfadlänge = 12.79 : Wed Nov 08 07:24:00 CET 2023\r\n425 Durchschnittliche Pfadlänge = 11.87 : Wed Nov 08 07:23:57 CET 2023\r\n424 Durchschnittliche Pfadlänge = 10.53 : Wed Nov 08 07:23:55 CET 2023\r\n423 Durchschnittliche Pfadlänge = 11.6 : Wed Nov 08 07:23:52 CET 2023\r\n422 Durchschnittliche Pfadlänge = 13.51 : Wed Nov 08 07:23:50 CET 2023\r\n421 Durchschnittliche Pfadlänge = 10.76 : Wed Nov 08 07:23:47 CET 2023\r\n420 Durchschnittliche Pfadlänge = 12.29 : Wed Nov 08 07:23:45 CET 2023\r\n419 Durchschnittliche Pfadlänge = 11.18 : Wed Nov 08 07:23:43 CET 2023\r\n418 Durchschnittliche Pfadlänge = 12.78 : Wed Nov 08 07:23:40 CET 2023\r\n417 Durchschnittliche Pfadlänge = 12.35 : Wed Nov 08 07:23:38 CET 2023\r\n416 Durchschnittliche Pfadlänge = 12.07 : Wed Nov 08 07:23:35 CET 2023\r\n415 Durchschnittliche Pfadlänge = 12.23 : Wed Nov 08 07:23:33 CET 2023\r\n414 Durchschnittliche Pfadlänge = 12.22 : Wed Nov 08 07:23:30 CET 2023\r\n413 Durchschnittliche Pfadlänge = 12.94 : Wed Nov 08 07:23:28 CET 2023\r\n412 Durchschnittliche Pfadlänge = 12.42 : Wed Nov 08 07:23:25 CET 2023\r\n411 Durchschnittliche Pfadlänge = 11.17 : Wed Nov 08 07:23:23 CET 2023\r\n410 Durchschnittliche Pfadlänge = 11.55 : Wed Nov 08 07:23:20 CET 2023\r\n409 Durchschnittliche Pfadlänge = 9.51 : Wed Nov 08 07:23:18 CET 2023\r\n408 Durchschnittliche Pfadlänge = 12.26 : Wed Nov 08 07:23:16 CET 2023\r\n407 Durchschnittliche Pfadlänge = 12.2 : Wed Nov 08 07:23:14 CET 2023\r\n406 Durchschnittliche Pfadlänge = 10.46 : Wed Nov 08 07:23:11 CET 2023\r\n405 Durchschnittliche Pfadlänge = 11.08 : Wed Nov 08 07:23:09 CET 2023\r\n404 Durchschnittliche Pfadlänge = 15.19 : Wed Nov 08 07:23:07 CET 2023\r\n403 Durchschnittliche Pfadlänge = 11.0 : Wed Nov 08 07:23:04 CET 2023\r\n402 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 07:23:01 CET 2023\r\n401 Durchschnittliche Pfadlänge = 11.8 : Wed Nov 08 07:22:59 CET 2023\r\n400 Durchschnittliche Pfadlänge = 13.34 : Wed Nov 08 07:22:56 CET 2023\r\n399 Durchschnittliche Pfadlänge = 9.11 : Wed Nov 08 07:22:54 CET 2023\r\n398 Durchschnittliche Pfadlänge = 11.17 : Wed Nov 08 07:22:52 CET 2023\r\n397 Durchschnittliche Pfadlänge = 11.31 : Wed Nov 08 07:22:50 CET 2023\r\n396 Durchschnittliche Pfadlänge = 13.08 : Wed Nov 08 07:22:47 CET 2023\r\n395 Durchschnittliche Pfadlänge = 6.78 : Wed Nov 08 07:22:44 CET 2023\r\n394 Durchschnittliche Pfadlänge = 13.05 : Wed Nov 08 07:22:42 CET 2023\r\n393 Durchschnittliche Pfadlänge = 13.74 : Wed Nov 08 07:22:40 CET 2023\r\n392 Durchschnittliche Pfadlänge = 12.31 : Wed Nov 08 07:22:37 CET 2023\r\n391 Durchschnittliche Pfadlänge = 12.45 : Wed Nov 08 07:22:34 CET 2023\r\n390 Durchschnittliche Pfadlänge = 12.94 : Wed Nov 08 07:22:31 CET 2023\r\n389 Durchschnittliche Pfadlänge = 13.37 : Wed Nov 08 07:22:28 CET 2023\r\n388 Durchschnittliche Pfadlänge = 8.81 : Wed Nov 08 07:22:26 CET 2023\r\n387 Durchschnittliche Pfadlänge = 9.1 : Wed Nov 08 07:22:24 CET 2023\r\n386 Durchschnittliche Pfadlänge = 12.97 : Wed Nov 08 07:22:22 CET 2023\r\n385 Durchschnittliche Pfadlänge = 12.36 : Wed Nov 08 07:22:19 CET 2023\r\n384 Durchschnittliche Pfadlänge = 12.31 : Wed Nov 08 07:22:16 CET 2023\r\n383 Durchschnittliche Pfadlänge = 11.7 : Wed Nov 08 07:22:13 CET 2023\r\n382 Durchschnittliche Pfadlänge = 12.13 : Wed Nov 08 07:22:11 CET 2023\r\n381 Durchschnittliche Pfadlänge = 11.75 : Wed Nov 08 07:22:08 CET 2023\r\n380 Durchschnittliche Pfadlänge = 14.49 : Wed Nov 08 07:22:06 CET 2023\r\n379 Durchschnittliche Pfadlänge = 12.3 : Wed Nov 08 07:22:03 CET 2023\r\n378 Durchschnittliche Pfadlänge = 12.49 : Wed Nov 08 07:22:01 CET 2023\r\n377 Durchschnittliche Pfadlänge = 12.82 : Wed Nov 08 07:21:58 CET 2023\r\n376 Durchschnittliche Pfadlänge = 10.66 : Wed Nov 08 07:21:55 CET 2023\r\n375 Durchschnittliche Pfadlänge = 11.33 : Wed Nov 08 07:21:53 CET 2023\r\n374 Durchschnittliche Pfadlänge = 13.44 : Wed Nov 08 07:21:51 CET 2023\r\n373 Durchschnittliche Pfadlänge = 1.63 : Wed Nov 08 07:21:48 CET 2023\r\n372 Durchschnittliche Pfadlänge = 13.11 : Wed Nov 08 07:21:48 CET 2023\r\n371 Durchschnittliche Pfadlänge = 14.37 : Wed Nov 08 07:21:45 CET 2023\r\n370 Durchschnittliche Pfadlänge = 12.1 : Wed Nov 08 07:21:42 CET 2023\r\n369 Durchschnittliche Pfadlänge = 11.33 : Wed Nov 08 07:21:40 CET 2023\r\n368 Durchschnittliche Pfadlänge = 12.84 : Wed Nov 08 07:21:38 CET 2023\r\n367 Durchschnittliche Pfadlänge = 14.11 : Wed Nov 08 07:21:35 CET 2023\r\n366 Durchschnittliche Pfadlänge = 11.02 : Wed Nov 08 07:21:32 CET 2023\r\n365 Durchschnittliche Pfadlänge = 10.53 : Wed Nov 08 07:21:30 CET 2023\r\n364 Durchschnittliche Pfadlänge = 13.37 : Wed Nov 08 07:21:28 CET 2023\r\n363 Durchschnittliche Pfadlänge = 10.72 : Wed Nov 08 07:21:25 CET 2023\r\n362 Durchschnittliche Pfadlänge = 11.9 : Wed Nov 08 07:21:23 CET 2023\r\n361 Durchschnittliche Pfadlänge = 10.01 : Wed Nov 08 07:21:20 CET 2023\r\n360 Durchschnittliche Pfadlänge = 12.03 : Wed Nov 08 07:21:18 CET 2023\r\n359 Durchschnittliche Pfadlänge = 13.49 : Wed Nov 08 07:21:16 CET 2023\r\n358 Durchschnittliche Pfadlänge = 11.13 : Wed Nov 08 07:21:13 CET 2023\r\n357 Durchschnittliche Pfadlänge = 11.01 : Wed Nov 08 07:21:11 CET 2023\r\n356 Durchschnittliche Pfadlänge = 7.23 : Wed Nov 08 07:21:09 CET 2023\r\n355 Durchschnittliche Pfadlänge = 12.03 : Wed Nov 08 07:21:07 CET 2023\r\n354 Durchschnittliche Pfadlänge = 14.03 : Wed Nov 08 07:21:05 CET 2023\r\n353 Durchschnittliche Pfadlänge = 11.44 : Wed Nov 08 07:21:02 CET 2023\r\n352 Durchschnittliche Pfadlänge = 10.05 : Wed Nov 08 07:20:59 CET 2023\r\n351 Durchschnittliche Pfadlänge = 13.62 : Wed Nov 08 07:20:57 CET 2023\r\n350 Durchschnittliche Pfadlänge = 12.85 : Wed Nov 08 07:20:55 CET 2023\r\n349 Durchschnittliche Pfadlänge = 9.55 : Wed Nov 08 07:20:52 CET 2023\r\n348 Durchschnittliche Pfadlänge = 13.12 : Wed Nov 08 07:20:50 CET 2023\r\n347 Durchschnittliche Pfadlänge = 13.57 : Wed Nov 08 07:20:47 CET 2023\r\n346 Durchschnittliche Pfadlänge = 9.81 : Wed Nov 08 07:20:45 CET 2023\r\n345 Durchschnittliche Pfadlänge = 14.12 : Wed Nov 08 07:20:43 CET 2023\r\n344 Durchschnittliche Pfadlänge = 12.59 : Wed Nov 08 07:20:40 CET 2023\r\n343 Durchschnittliche Pfadlänge = 11.98 : Wed Nov 08 07:20:37 CET 2023\r\n342 Durchschnittliche Pfadlänge = 12.84 : Wed Nov 08 07:20:35 CET 2023\r\n341 Durchschnittliche Pfadlänge = 11.78 : Wed Nov 08 07:20:32 CET 2023\r\n340 Durchschnittliche Pfadlänge = 14.2 : Wed Nov 08 07:20:30 CET 2023\r\n339 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:20:27 CET 2023\r\n338 Durchschnittliche Pfadlänge = 12.2 : Wed Nov 08 07:20:24 CET 2023\r\n337 Durchschnittliche Pfadlänge = 11.0 : Wed Nov 08 07:20:22 CET 2023\r\n336 Durchschnittliche Pfadlänge = 11.49 : Wed Nov 08 07:20:20 CET 2023\r\n335 Durchschnittliche Pfadlänge = 13.59 : Wed Nov 08 07:20:17 CET 2023\r\n334 Durchschnittliche Pfadlänge = 11.66 : Wed Nov 08 07:20:14 CET 2023\r\n333 Durchschnittliche Pfadlänge = 12.0 : Wed Nov 08 07:20:12 CET 2023\r\n332 Durchschnittliche Pfadlänge = 10.74 : Wed Nov 08 07:20:10 CET 2023\r\n331 Durchschnittliche Pfadlänge = 12.15 : Wed Nov 08 07:20:07 CET 2023\r\n330 Durchschnittliche Pfadlänge = 11.8 : Wed Nov 08 07:20:05 CET 2023\r\n329 Durchschnittliche Pfadlänge = 12.7 : Wed Nov 08 07:20:03 CET 2023\r\n328 Durchschnittliche Pfadlänge = 13.7 : Wed Nov 08 07:20:00 CET 2023\r\n327 Durchschnittliche Pfadlänge = 12.2 : Wed Nov 08 07:19:57 CET 2023\r\n326 Durchschnittliche Pfadlänge = 10.21 : Wed Nov 08 07:19:55 CET 2023\r\n325 Durchschnittliche Pfadlänge = 10.19 : Wed Nov 08 07:19:53 CET 2023\r\n324 Durchschnittliche Pfadlänge = 12.36 : Wed Nov 08 07:19:51 CET 2023\r\n323 Durchschnittliche Pfadlänge = 13.36 : Wed Nov 08 07:19:48 CET 2023\r\n322 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 07:19:45 CET 2023\r\n321 Durchschnittliche Pfadlänge = 9.51 : Wed Nov 08 07:19:43 CET 2023\r\n320 Durchschnittliche Pfadlänge = 8.23 : Wed Nov 08 07:19:41 CET 2023\r\n319 Durchschnittliche Pfadlänge = 14.16 : Wed Nov 08 07:19:40 CET 2023\r\n318 Durchschnittliche Pfadlänge = 12.4 : Wed Nov 08 07:19:37 CET 2023\r\n317 Durchschnittliche Pfadlänge = 10.93 : Wed Nov 08 07:19:34 CET 2023\r\n316 Durchschnittliche Pfadlänge = 8.94 : Wed Nov 08 07:19:32 CET 2023\r\n315 Durchschnittliche Pfadlänge = 9.51 : Wed Nov 08 07:19:30 CET 2023\r\n314 Durchschnittliche Pfadlänge = 11.37 : Wed Nov 08 07:19:28 CET 2023\r\n313 Durchschnittliche Pfadlänge = 13.06 : Wed Nov 08 07:19:26 CET 2023\r\n312 Durchschnittliche Pfadlänge = 12.47 : Wed Nov 08 07:19:23 CET 2023\r\n311 Durchschnittliche Pfadlänge = 9.48 : Wed Nov 08 07:19:21 CET 2023\r\n310 Durchschnittliche Pfadlänge = 13.31 : Wed Nov 08 07:19:19 CET 2023\r\n309 Durchschnittliche Pfadlänge = 14.28 : Wed Nov 08 07:19:16 CET 2023\r\n308 Durchschnittliche Pfadlänge = 6.64 : Wed Nov 08 07:19:13 CET 2023\r\n307 Durchschnittliche Pfadlänge = 12.84 : Wed Nov 08 07:19:12 CET 2023\r\n306 Durchschnittliche Pfadlänge = 13.21 : Wed Nov 08 07:19:09 CET 2023\r\n305 Durchschnittliche Pfadlänge = 11.63 : Wed Nov 08 07:19:06 CET 2023\r\n304 Durchschnittliche Pfadlänge = 12.04 : Wed Nov 08 07:19:04 CET 2023\r\n303 Durchschnittliche Pfadlänge = 9.88 : Wed Nov 08 07:19:02 CET 2023\r\n302 Durchschnittliche Pfadlänge = 12.96 : Wed Nov 08 07:19:00 CET 2023\r\n301 Durchschnittliche Pfadlänge = 13.48 : Wed Nov 08 07:18:57 CET 2023\r\n300 Durchschnittliche Pfadlänge = 12.99 : Wed Nov 08 07:18:54 CET 2023\r\n299 Durchschnittliche Pfadlänge = 11.61 : Wed Nov 08 07:18:51 CET 2023\r\n298 Durchschnittliche Pfadlänge = 12.88 : Wed Nov 08 07:18:49 CET 2023\r\n297 Durchschnittliche Pfadlänge = 11.33 : Wed Nov 08 07:18:46 CET 2023\r\n296 Durchschnittliche Pfadlänge = 10.56 : Wed Nov 08 07:18:44 CET 2023\r\n295 Durchschnittliche Pfadlänge = 13.1 : Wed Nov 08 07:18:42 CET 2023\r\n294 Durchschnittliche Pfadlänge = 12.26 : Wed Nov 08 07:18:39 CET 2023\r\n293 Durchschnittliche Pfadlänge = 10.98 : Wed Nov 08 07:18:37 CET 2023\r\n292 Durchschnittliche Pfadlänge = 13.14 : Wed Nov 08 07:18:35 CET 2023\r\n291 Durchschnittliche Pfadlänge = 14.22 : Wed Nov 08 07:18:32 CET 2023\r\n290 Durchschnittliche Pfadlänge = 10.98 : Wed Nov 08 07:18:29 CET 2023\r\n289 Durchschnittliche Pfadlänge = 13.24 : Wed Nov 08 07:18:27 CET 2023\r\n288 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 07:18:24 CET 2023\r\n287 Durchschnittliche Pfadlänge = 11.25 : Wed Nov 08 07:18:21 CET 2023\r\n286 Durchschnittliche Pfadlänge = 13.45 : Wed Nov 08 07:18:19 CET 2023\r\n285 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 07:18:16 CET 2023\r\n284 Durchschnittliche Pfadlänge = 13.64 : Wed Nov 08 07:18:14 CET 2023\r\n283 Durchschnittliche Pfadlänge = 10.07 : Wed Nov 08 07:18:11 CET 2023\r\n282 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:18:09 CET 2023\r\n281 Durchschnittliche Pfadlänge = 13.6 : Wed Nov 08 07:18:06 CET 2023\r\n280 Durchschnittliche Pfadlänge = 11.5 : Wed Nov 08 07:18:04 CET 2023\r\n279 Durchschnittliche Pfadlänge = 12.49 : Wed Nov 08 07:18:01 CET 2023\r\n278 Durchschnittliche Pfadlänge = 9.06 : Wed Nov 08 07:17:59 CET 2023\r\n277 Durchschnittliche Pfadlänge = 9.91 : Wed Nov 08 07:17:57 CET 2023\r\n276 Durchschnittliche Pfadlänge = 10.39 : Wed Nov 08 07:17:55 CET 2023\r\n275 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 07:17:53 CET 2023\r\n274 Durchschnittliche Pfadlänge = 12.65 : Wed Nov 08 07:17:50 CET 2023\r\n273 Durchschnittliche Pfadlänge = 9.42 : Wed Nov 08 07:17:48 CET 2023\r\n272 Durchschnittliche Pfadlänge = 13.14 : Wed Nov 08 07:17:46 CET 2023\r\n271 Durchschnittliche Pfadlänge = 10.59 : Wed Nov 08 07:17:43 CET 2023\r\n270 Durchschnittliche Pfadlänge = 11.91 : Wed Nov 08 07:17:41 CET 2023\r\n269 Durchschnittliche Pfadlänge = 11.17 : Wed Nov 08 07:17:39 CET 2023\r\n268 Durchschnittliche Pfadlänge = 10.07 : Wed Nov 08 07:17:37 CET 2023\r\n267 Durchschnittliche Pfadlänge = 9.1 : Wed Nov 08 07:17:34 CET 2023\r\n266 Durchschnittliche Pfadlänge = 10.77 : Wed Nov 08 07:17:33 CET 2023\r\n265 Durchschnittliche Pfadlänge = 11.29 : Wed Nov 08 07:17:30 CET 2023\r\n264 Durchschnittliche Pfadlänge = 8.81 : Wed Nov 08 07:17:28 CET 2023\r\n263 Durchschnittliche Pfadlänge = 12.56 : Wed Nov 08 07:17:26 CET 2023\r\n262 Durchschnittliche Pfadlänge = 13.66 : Wed Nov 08 07:17:24 CET 2023\r\n261 Durchschnittliche Pfadlänge = 10.91 : Wed Nov 08 07:17:21 CET 2023\r\n260 Durchschnittliche Pfadlänge = 9.43 : Wed Nov 08 07:17:19 CET 2023\r\n259 Durchschnittliche Pfadlänge = 10.33 : Wed Nov 08 07:17:17 CET 2023\r\n258 Durchschnittliche Pfadlänge = 11.84 : Wed Nov 08 07:17:15 CET 2023\r\n257 Durchschnittliche Pfadlänge = 13.98 : Wed Nov 08 07:17:13 CET 2023\r\n256 Durchschnittliche Pfadlänge = 13.98 : Wed Nov 08 07:17:10 CET 2023\r\n255 Durchschnittliche Pfadlänge = 12.82 : Wed Nov 08 07:17:07 CET 2023\r\n254 Durchschnittliche Pfadlänge = 9.93 : Wed Nov 08 07:17:04 CET 2023\r\n253 Durchschnittliche Pfadlänge = 11.33 : Wed Nov 08 07:17:02 CET 2023\r\n252 Durchschnittliche Pfadlänge = 13.7 : Wed Nov 08 07:17:00 CET 2023\r\n251 Durchschnittliche Pfadlänge = 11.14 : Wed Nov 08 07:16:57 CET 2023\r\n250 Durchschnittliche Pfadlänge = 10.92 : Wed Nov 08 07:16:55 CET 2023\r\n249 Durchschnittliche Pfadlänge = 11.44 : Wed Nov 08 07:16:53 CET 2023\r\n248 Durchschnittliche Pfadlänge = 13.43 : Wed Nov 08 07:16:50 CET 2023\r\n247 Durchschnittliche Pfadlänge = 12.38 : Wed Nov 08 07:16:48 CET 2023\r\n246 Durchschnittliche Pfadlänge = 12.92 : Wed Nov 08 07:16:45 CET 2023\r\n245 Durchschnittliche Pfadlänge = 12.74 : Wed Nov 08 07:16:43 CET 2023\r\n244 Durchschnittliche Pfadlänge = 10.64 : Wed Nov 08 07:16:40 CET 2023\r\n243 Durchschnittliche Pfadlänge = 12.96 : Wed Nov 08 07:16:38 CET 2023\r\n242 Durchschnittliche Pfadlänge = 10.34 : Wed Nov 08 07:16:35 CET 2023\r\n241 Durchschnittliche Pfadlänge = 10.01 : Wed Nov 08 07:16:33 CET 2023\r\n240 Durchschnittliche Pfadlänge = 12.74 : Wed Nov 08 07:16:31 CET 2023\r\n239 Durchschnittliche Pfadlänge = 12.3 : Wed Nov 08 07:16:28 CET 2023\r\n238 Durchschnittliche Pfadlänge = 11.79 : Wed Nov 08 07:16:26 CET 2023\r\n237 Durchschnittliche Pfadlänge = 10.13 : Wed Nov 08 07:16:24 CET 2023\r\n236 Durchschnittliche Pfadlänge = 14.37 : Wed Nov 08 07:16:22 CET 2023\r\n235 Durchschnittliche Pfadlänge = 12.45 : Wed Nov 08 07:16:19 CET 2023\r\n234 Durchschnittliche Pfadlänge = 12.53 : Wed Nov 08 07:16:16 CET 2023\r\n233 Durchschnittliche Pfadlänge = 13.09 : Wed Nov 08 07:16:14 CET 2023\r\n232 Durchschnittliche Pfadlänge = 11.46 : Wed Nov 08 07:16:11 CET 2023\r\n231 Durchschnittliche Pfadlänge = 13.58 : Wed Nov 08 07:16:09 CET 2023\r\n230 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:16:06 CET 2023\r\n229 Durchschnittliche Pfadlänge = 14.57 : Wed Nov 08 07:16:03 CET 2023\r\n228 Durchschnittliche Pfadlänge = 11.79 : Wed Nov 08 07:16:00 CET 2023\r\n227 Durchschnittliche Pfadlänge = 9.57 : Wed Nov 08 07:15:58 CET 2023\r\n226 Durchschnittliche Pfadlänge = 10.97 : Wed Nov 08 07:15:56 CET 2023\r\n225 Durchschnittliche Pfadlänge = 5.77 : Wed Nov 08 07:15:54 CET 2023\r\n224 Durchschnittliche Pfadlänge = 11.15 : Wed Nov 08 07:15:53 CET 2023\r\n223 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 07:15:50 CET 2023\r\n222 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 07:15:48 CET 2023\r\n221 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:15:46 CET 2023\r\n220 Durchschnittliche Pfadlänge = 13.81 : Wed Nov 08 07:15:43 CET 2023\r\n219 Durchschnittliche Pfadlänge = 12.66 : Wed Nov 08 07:15:40 CET 2023\r\n218 Durchschnittliche Pfadlänge = 12.12 : Wed Nov 08 07:15:38 CET 2023\r\n217 Durchschnittliche Pfadlänge = 10.86 : Wed Nov 08 07:15:35 CET 2023\r\n216 Durchschnittliche Pfadlänge = 14.24 : Wed Nov 08 07:15:33 CET 2023\r\n215 Durchschnittliche Pfadlänge = 9.14 : Wed Nov 08 07:15:30 CET 2023\r\n214 Durchschnittliche Pfadlänge = 8.21 : Wed Nov 08 07:15:28 CET 2023\r\n213 Durchschnittliche Pfadlänge = 11.12 : Wed Nov 08 07:15:27 CET 2023\r\n212 Durchschnittliche Pfadlänge = 11.35 : Wed Nov 08 07:15:24 CET 2023\r\n211 Durchschnittliche Pfadlänge = 12.32 : Wed Nov 08 07:15:22 CET 2023\r\n210 Durchschnittliche Pfadlänge = 13.49 : Wed Nov 08 07:15:20 CET 2023\r\n209 Durchschnittliche Pfadlänge = 12.92 : Wed Nov 08 07:15:17 CET 2023\r\n208 Durchschnittliche Pfadlänge = 13.31 : Wed Nov 08 07:15:14 CET 2023\r\n207 Durchschnittliche Pfadlänge = 11.45 : Wed Nov 08 07:15:12 CET 2023\r\n206 Durchschnittliche Pfadlänge = 12.53 : Wed Nov 08 07:15:09 CET 2023\r\n205 Durchschnittliche Pfadlänge = 14.13 : Wed Nov 08 07:15:07 CET 2023\r\n204 Durchschnittliche Pfadlänge = 12.73 : Wed Nov 08 07:15:04 CET 2023\r\n203 Durchschnittliche Pfadlänge = 11.88 : Wed Nov 08 07:15:01 CET 2023\r\n202 Durchschnittliche Pfadlänge = 14.05 : Wed Nov 08 07:14:59 CET 2023\r\n201 Durchschnittliche Pfadlänge = 12.48 : Wed Nov 08 07:14:56 CET 2023\r\n200 Durchschnittliche Pfadlänge = 10.3 : Wed Nov 08 07:14:53 CET 2023\r\n199 Durchschnittliche Pfadlänge = 11.81 : Wed Nov 08 07:14:51 CET 2023\r\n198 Durchschnittliche Pfadlänge = 13.14 : Wed Nov 08 07:14:49 CET 2023\r\n197 Durchschnittliche Pfadlänge = 12.84 : Wed Nov 08 07:14:46 CET 2023\r\n196 Durchschnittliche Pfadlänge = 12.42 : Wed Nov 08 07:14:44 CET 2023\r\n195 Durchschnittliche Pfadlänge = 13.02 : Wed Nov 08 07:14:41 CET 2023\r\n194 Durchschnittliche Pfadlänge = 14.3 : Wed Nov 08 07:14:38 CET 2023\r\n193 Durchschnittliche Pfadlänge = 12.19 : Wed Nov 08 07:14:35 CET 2023\r\n192 Durchschnittliche Pfadlänge = 13.87 : Wed Nov 08 07:14:33 CET 2023\r\n191 Durchschnittliche Pfadlänge = 11.24 : Wed Nov 08 07:14:30 CET 2023\r\n190 Durchschnittliche Pfadlänge = 14.18 : Wed Nov 08 07:14:28 CET 2023\r\n189 Durchschnittliche Pfadlänge = 10.13 : Wed Nov 08 07:14:25 CET 2023\r\n188 Durchschnittliche Pfadlänge = 8.34 : Wed Nov 08 07:14:23 CET 2023\r\n187 Durchschnittliche Pfadlänge = 14.44 : Wed Nov 08 07:14:21 CET 2023\r\n186 Durchschnittliche Pfadlänge = 11.95 : Wed Nov 08 07:14:18 CET 2023\r\n185 Durchschnittliche Pfadlänge = 10.52 : Wed Nov 08 07:14:16 CET 2023\r\n184 Durchschnittliche Pfadlänge = 10.87 : Wed Nov 08 07:14:13 CET 2023\r\n183 Durchschnittliche Pfadlänge = 6.79 : Wed Nov 08 07:14:11 CET 2023\r\n182 Durchschnittliche Pfadlänge = 14.53 : Wed Nov 08 07:14:10 CET 2023\r\n181 Durchschnittliche Pfadlänge = 12.34 : Wed Nov 08 07:14:07 CET 2023\r\n180 Durchschnittliche Pfadlänge = 11.07 : Wed Nov 08 07:14:04 CET 2023\r\n179 Durchschnittliche Pfadlänge = 14.16 : Wed Nov 08 07:14:02 CET 2023\r\n178 Durchschnittliche Pfadlänge = 13.39 : Wed Nov 08 07:13:59 CET 2023\r\n177 Durchschnittliche Pfadlänge = 9.67 : Wed Nov 08 07:13:56 CET 2023\r\n176 Durchschnittliche Pfadlänge = 7.33 : Wed Nov 08 07:13:55 CET 2023\r\n175 Durchschnittliche Pfadlänge = 14.23 : Wed Nov 08 07:13:53 CET 2023\r\n174 Durchschnittliche Pfadlänge = 11.06 : Wed Nov 08 07:13:50 CET 2023\r\n173 Durchschnittliche Pfadlänge = 11.21 : Wed Nov 08 07:13:48 CET 2023\r\n172 Durchschnittliche Pfadlänge = 12.51 : Wed Nov 08 07:13:46 CET 2023\r\n171 Durchschnittliche Pfadlänge = 13.18 : Wed Nov 08 07:13:43 CET 2023\r\n170 Durchschnittliche Pfadlänge = 11.25 : Wed Nov 08 07:13:40 CET 2023\r\n169 Durchschnittliche Pfadlänge = 13.48 : Wed Nov 08 07:13:38 CET 2023\r\n168 Durchschnittliche Pfadlänge = 10.95 : Wed Nov 08 07:13:35 CET 2023\r\n167 Durchschnittliche Pfadlänge = 10.24 : Wed Nov 08 07:13:33 CET 2023\r\n166 Durchschnittliche Pfadlänge = 11.14 : Wed Nov 08 07:13:31 CET 2023\r\n165 Durchschnittliche Pfadlänge = 13.04 : Wed Nov 08 07:13:29 CET 2023\r\n164 Durchschnittliche Pfadlänge = 8.7 : Wed Nov 08 07:13:26 CET 2023\r\n163 Durchschnittliche Pfadlänge = 14.22 : Wed Nov 08 07:13:24 CET 2023\r\n162 Durchschnittliche Pfadlänge = 14.38 : Wed Nov 08 07:13:22 CET 2023\r\n161 Durchschnittliche Pfadlänge = 13.05 : Wed Nov 08 07:13:19 CET 2023\r\n160 Durchschnittliche Pfadlänge = 14.23 : Wed Nov 08 07:13:16 CET 2023\r\n159 Durchschnittliche Pfadlänge = 12.24 : Wed Nov 08 07:13:13 CET 2023\r\n158 Durchschnittliche Pfadlänge = 11.36 : Wed Nov 08 07:13:11 CET 2023\r\n157 Durchschnittliche Pfadlänge = 8.76 : Wed Nov 08 07:13:08 CET 2023\r\n156 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 07:13:07 CET 2023\r\n155 Durchschnittliche Pfadlänge = 11.77 : Wed Nov 08 07:13:04 CET 2023\r\n154 Durchschnittliche Pfadlänge = 11.42 : Wed Nov 08 07:13:01 CET 2023\r\n153 Durchschnittliche Pfadlänge = 9.43 : Wed Nov 08 07:12:59 CET 2023\r\n152 Durchschnittliche Pfadlänge = 12.04 : Wed Nov 08 07:12:57 CET 2023\r\n151 Durchschnittliche Pfadlänge = 9.97 : Wed Nov 08 07:12:55 CET 2023\r\n150 Durchschnittliche Pfadlänge = 12.8 : Wed Nov 08 07:12:53 CET 2023\r\n149 Durchschnittliche Pfadlänge = 12.65 : Wed Nov 08 07:12:50 CET 2023\r\n148 Durchschnittliche Pfadlänge = 13.21 : Wed Nov 08 07:12:48 CET 2023\r\n147 Durchschnittliche Pfadlänge = 14.65 : Wed Nov 08 07:12:45 CET 2023\r\n146 Durchschnittliche Pfadlänge = 7.34 : Wed Nov 08 07:12:42 CET 2023\r\n145 Durchschnittliche Pfadlänge = 13.63 : Wed Nov 08 07:12:40 CET 2023\r\n144 Durchschnittliche Pfadlänge = 12.19 : Wed Nov 08 07:12:38 CET 2023\r\n143 Durchschnittliche Pfadlänge = 13.58 : Wed Nov 08 07:12:35 CET 2023\r\n142 Durchschnittliche Pfadlänge = 10.99 : Wed Nov 08 07:12:32 CET 2023\r\n141 Durchschnittliche Pfadlänge = 8.07 : Wed Nov 08 07:12:30 CET 2023\r\n140 Durchschnittliche Pfadlänge = 14.64 : Wed Nov 08 07:12:28 CET 2023\r\n139 Durchschnittliche Pfadlänge = 12.03 : Wed Nov 08 07:12:26 CET 2023\r\n138 Durchschnittliche Pfadlänge = 11.04 : Wed Nov 08 07:12:23 CET 2023\r\n137 Durchschnittliche Pfadlänge = 12.43 : Wed Nov 08 07:12:21 CET 2023\r\n136 Durchschnittliche Pfadlänge = 13.47 : Wed Nov 08 07:12:18 CET 2023\r\n135 Durchschnittliche Pfadlänge = 13.0 : Wed Nov 08 07:12:16 CET 2023\r\n134 Durchschnittliche Pfadlänge = 12.24 : Wed Nov 08 07:12:13 CET 2023\r\n133 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 07:12:10 CET 2023\r\n132 Durchschnittliche Pfadlänge = 12.53 : Wed Nov 08 07:12:08 CET 2023\r\n131 Durchschnittliche Pfadlänge = 14.29 : Wed Nov 08 07:12:05 CET 2023\r\n130 Durchschnittliche Pfadlänge = 9.12 : Wed Nov 08 07:12:02 CET 2023\r\n129 Durchschnittliche Pfadlänge = 13.22 : Wed Nov 08 07:12:01 CET 2023\r\n128 Durchschnittliche Pfadlänge = 11.74 : Wed Nov 08 07:11:58 CET 2023\r\n127 Durchschnittliche Pfadlänge = 11.2 : Wed Nov 08 07:11:56 CET 2023\r\n126 Durchschnittliche Pfadlänge = 12.0 : Wed Nov 08 07:11:53 CET 2023\r\n125 Durchschnittliche Pfadlänge = 10.81 : Wed Nov 08 07:11:51 CET 2023\r\n124 Durchschnittliche Pfadlänge = 10.35 : Wed Nov 08 07:11:49 CET 2023\r\n123 Durchschnittliche Pfadlänge = 12.5 : Wed Nov 08 07:11:47 CET 2023\r\n122 Durchschnittliche Pfadlänge = 11.8 : Wed Nov 08 07:11:44 CET 2023\r\n121 Durchschnittliche Pfadlänge = 13.27 : Wed Nov 08 07:11:42 CET 2023\r\n120 Durchschnittliche Pfadlänge = 12.96 : Wed Nov 08 07:11:39 CET 2023\r\n119 Durchschnittliche Pfadlänge = 12.52 : Wed Nov 08 07:11:36 CET 2023\r\n118 Durchschnittliche Pfadlänge = 13.84 : Wed Nov 08 07:11:34 CET 2023\r\n117 Durchschnittliche Pfadlänge = 13.9 : Wed Nov 08 07:11:31 CET 2023\r\n116 Durchschnittliche Pfadlänge = 10.81 : Wed Nov 08 07:11:28 CET 2023\r\n115 Durchschnittliche Pfadlänge = 11.89 : Wed Nov 08 07:11:26 CET 2023\r\n114 Durchschnittliche Pfadlänge = 14.4 : Wed Nov 08 07:11:24 CET 2023\r\n113 Durchschnittliche Pfadlänge = 12.14 : Wed Nov 08 07:11:21 CET 2023\r\n112 Durchschnittliche Pfadlänge = 10.17 : Wed Nov 08 07:11:18 CET 2023\r\n111 Durchschnittliche Pfadlänge = 10.69 : Wed Nov 08 07:11:16 CET 2023\r\n110 Durchschnittliche Pfadlänge = 11.82 : Wed Nov 08 07:11:14 CET 2023\r\n109 Durchschnittliche Pfadlänge = 11.82 : Wed Nov 08 07:11:11 CET 2023\r\n108 Durchschnittliche Pfadlänge = 11.89 : Wed Nov 08 07:11:09 CET 2023\r\n107 Durchschnittliche Pfadlänge = 11.7 : Wed Nov 08 07:11:07 CET 2023\r\n106 Durchschnittliche Pfadlänge = 12.0 : Wed Nov 08 07:11:04 CET 2023\r\n105 Durchschnittliche Pfadlänge = 13.17 : Wed Nov 08 07:11:02 CET 2023\r\n104 Durchschnittliche Pfadlänge = 12.32 : Wed Nov 08 07:10:59 CET 2023\r\n103 Durchschnittliche Pfadlänge = 11.33 : Wed Nov 08 07:10:57 CET 2023\r\n102 Durchschnittliche Pfadlänge = 10.32 : Wed Nov 08 07:10:54 CET 2023\r\n101 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 07:10:52 CET 2023\r\n100 Durchschnittliche Pfadlänge = 13.57 : Wed Nov 08 07:10:50 CET 2023\r\n99 Durchschnittliche Pfadlänge = 12.85 : Wed Nov 08 07:10:47 CET 2023\r\n98 Durchschnittliche Pfadlänge = 11.96 : Wed Nov 08 07:10:45 CET 2023\r\n97 Durchschnittliche Pfadlänge = 12.24 : Wed Nov 08 07:10:42 CET 2023\r\n96 Durchschnittliche Pfadlänge = 12.21 : Wed Nov 08 07:10:40 CET 2023\r\n95 Durchschnittliche Pfadlänge = 11.18 : Wed Nov 08 07:10:37 CET 2023\r\n94 Durchschnittliche Pfadlänge = 15.03 : Wed Nov 08 07:10:35 CET 2023\r\n93 Durchschnittliche Pfadlänge = 12.82 : Wed Nov 08 07:10:32 CET 2023\r\n92 Durchschnittliche Pfadlänge = 11.39 : Wed Nov 08 07:10:29 CET 2023\r\n91 Durchschnittliche Pfadlänge = 9.41 : Wed Nov 08 07:10:27 CET 2023\r\n90 Durchschnittliche Pfadlänge = 10.59 : Wed Nov 08 07:10:25 CET 2023\r\n89 Durchschnittliche Pfadlänge = 12.81 : Wed Nov 08 07:10:23 CET 2023\r\n88 Durchschnittliche Pfadlänge = 14.31 : Wed Nov 08 07:10:20 CET 2023\r\n87 Durchschnittliche Pfadlänge = 8.71 : Wed Nov 08 07:10:18 CET 2023\r\n86 Durchschnittliche Pfadlänge = 11.25 : Wed Nov 08 07:10:16 CET 2023\r\n85 Durchschnittliche Pfadlänge = 11.45 : Wed Nov 08 07:10:14 CET 2023\r\n84 Durchschnittliche Pfadlänge = 15.95 : Wed Nov 08 07:10:11 CET 2023\r\n83 Durchschnittliche Pfadlänge = 9.84 : Wed Nov 08 07:10:08 CET 2023\r\n82 Durchschnittliche Pfadlänge = 15.49 : Wed Nov 08 07:10:06 CET 2023\r\n81 Durchschnittliche Pfadlänge = 12.52 : Wed Nov 08 07:10:03 CET 2023\r\n80 Durchschnittliche Pfadlänge = 11.74 : Wed Nov 08 07:10:00 CET 2023\r\n79 Durchschnittliche Pfadlänge = 12.41 : Wed Nov 08 07:09:58 CET 2023\r\n78 Durchschnittliche Pfadlänge = 11.91 : Wed Nov 08 07:09:55 CET 2023\r\n77 Durchschnittliche Pfadlänge = 15.9 : Wed Nov 08 07:09:53 CET 2023\r\n76 Durchschnittliche Pfadlänge = 9.46 : Wed Nov 08 07:09:50 CET 2023\r\n75 Durchschnittliche Pfadlänge = 11.07 : Wed Nov 08 07:09:48 CET 2023\r\n74 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 07:09:46 CET 2023\r\n73 Durchschnittliche Pfadlänge = 13.64 : Wed Nov 08 07:09:43 CET 2023\r\n72 Durchschnittliche Pfadlänge = 10.38 : Wed Nov 08 07:09:41 CET 2023\r\n71 Durchschnittliche Pfadlänge = 12.72 : Wed Nov 08 07:09:39 CET 2023\r\n70 Durchschnittliche Pfadlänge = 13.71 : Wed Nov 08 07:09:36 CET 2023\r\n69 Durchschnittliche Pfadlänge = 13.51 : Wed Nov 08 07:09:33 CET 2023\r\n68 Durchschnittliche Pfadlänge = 9.2 : Wed Nov 08 07:09:30 CET 2023\r\n67 Durchschnittliche Pfadlänge = 11.76 : Wed Nov 08 07:09:29 CET 2023\r\n66 Durchschnittliche Pfadlänge = 12.69 : Wed Nov 08 07:09:26 CET 2023\r\n65 Durchschnittliche Pfadlänge = 13.96 : Wed Nov 08 07:09:24 CET 2023\r\n64 Durchschnittliche Pfadlänge = 14.58 : Wed Nov 08 07:09:21 CET 2023\r\n63 Durchschnittliche Pfadlänge = 11.16 : Wed Nov 08 07:09:18 CET 2023\r\n62 Durchschnittliche Pfadlänge = 10.11 : Wed Nov 08 07:09:16 CET 2023\r\n61 Durchschnittliche Pfadlänge = 10.28 : Wed Nov 08 07:09:13 CET 2023\r\n60 Durchschnittliche Pfadlänge = 14.36 : Wed Nov 08 07:09:11 CET 2023\r\n59 Durchschnittliche Pfadlänge = 11.84 : Wed Nov 08 07:09:08 CET 2023\r\n58 Durchschnittliche Pfadlänge = 13.64 : Wed Nov 08 07:09:06 CET 2023\r\n57 Durchschnittliche Pfadlänge = 13.32 : Wed Nov 08 07:09:03 CET 2023\r\n56 Durchschnittliche Pfadlänge = 11.39 : Wed Nov 08 07:09:01 CET 2023\r\n55 Durchschnittliche Pfadlänge = 9.85 : Wed Nov 08 07:08:58 CET 2023\r\n54 Durchschnittliche Pfadlänge = 11.41 : Wed Nov 08 07:08:56 CET 2023\r\n53 Durchschnittliche Pfadlänge = 9.54 : Wed Nov 08 07:08:54 CET 2023\r\n52 Durchschnittliche Pfadlänge = 11.41 : Wed Nov 08 07:08:52 CET 2023\r\n51 Durchschnittliche Pfadlänge = 12.52 : Wed Nov 08 07:08:50 CET 2023\r\n50 Durchschnittliche Pfadlänge = 9.58 : Wed Nov 08 07:08:47 CET 2023\r\n49 Durchschnittliche Pfadlänge = 13.32 : Wed Nov 08 07:08:45 CET 2023\r\n48 Durchschnittliche Pfadlänge = 11.18 : Wed Nov 08 07:08:43 CET 2023\r\n47 Durchschnittliche Pfadlänge = 13.8 : Wed Nov 08 07:08:40 CET 2023\r\n46 Durchschnittliche Pfadlänge = 10.61 : Wed Nov 08 07:08:37 CET 2023\r\n45 Durchschnittliche Pfadlänge = 11.46 : Wed Nov 08 07:08:35 CET 2023\r\n44 Durchschnittliche Pfadlänge = 11.98 : Wed Nov 08 07:08:33 CET 2023\r\n43 Durchschnittliche Pfadlänge = 5.8 : Wed Nov 08 07:08:31 CET 2023\r\n42 Durchschnittliche Pfadlänge = 8.16 : Wed Nov 08 07:08:29 CET 2023\r\n41 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 07:08:28 CET 2023\r\n40 Durchschnittliche Pfadlänge = 13.61 : Wed Nov 08 07:08:25 CET 2023\r\n39 Durchschnittliche Pfadlänge = 10.28 : Wed Nov 08 07:08:22 CET 2023\r\n38 Durchschnittliche Pfadlänge = 13.48 : Wed Nov 08 07:08:20 CET 2023\r\n37 Durchschnittliche Pfadlänge = 11.76 : Wed Nov 08 07:08:17 CET 2023\r\n36 Durchschnittliche Pfadlänge = 14.46 : Wed Nov 08 07:08:15 CET 2023\r\n35 Durchschnittliche Pfadlänge = 12.03 : Wed Nov 08 07:08:12 CET 2023\r\n34 Durchschnittliche Pfadlänge = 7.52 : Wed Nov 08 07:08:10 CET 2023\r\n33 Durchschnittliche Pfadlänge = 9.5 : Wed Nov 08 07:08:08 CET 2023\r\n32 Durchschnittliche Pfadlänge = 14.07 : Wed Nov 08 07:08:06 CET 2023\r\n31 Durchschnittliche Pfadlänge = 10.12 : Wed Nov 08 07:08:03 CET 2023\r\n30 Durchschnittliche Pfadlänge = 11.53 : Wed Nov 08 07:08:01 CET 2023\r\n29 Durchschnittliche Pfadlänge = 12.01 : Wed Nov 08 07:07:59 CET 2023\r\n28 Durchschnittliche Pfadlänge = 13.39 : Wed Nov 08 07:07:57 CET 2023\r\n27 Durchschnittliche Pfadlänge = 12.64 : Wed Nov 08 07:07:54 CET 2023\r\n26 Durchschnittliche Pfadlänge = 7.92 : Wed Nov 08 07:07:51 CET 2023\r\n25 Durchschnittliche Pfadlänge = 11.9 : Wed Nov 08 07:07:50 CET 2023\r\n24 Durchschnittliche Pfadlänge = 12.75 : Wed Nov 08 07:07:47 CET 2023\r\n23 Durchschnittliche Pfadlänge = 11.19 : Wed Nov 08 07:07:45 CET 2023\r\n22 Durchschnittliche Pfadlänge = 13.74 : Wed Nov 08 07:07:43 CET 2023\r\n21 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 07:07:40 CET 2023\r\n20 Durchschnittliche Pfadlänge = 12.64 : Wed Nov 08 07:07:37 CET 2023\r\n19 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 07:07:34 CET 2023\r\n18 Durchschnittliche Pfadlänge = 15.16 : Wed Nov 08 07:07:32 CET 2023\r\n17 Durchschnittliche Pfadlänge = 12.13 : Wed Nov 08 07:07:29 CET 2023\r\n16 Durchschnittliche Pfadlänge = 10.48 : Wed Nov 08 07:07:26 CET 2023\r\n15 Durchschnittliche Pfadlänge = 12.86 : Wed Nov 08 07:07:24 CET 2023\r\n14 Durchschnittliche Pfadlänge = 9.6 : Wed Nov 08 07:07:22 CET 2023\r\n13 Durchschnittliche Pfadlänge = 15.51 : Wed Nov 08 07:07:20 CET 2023\r\n12 Durchschnittliche Pfadlänge = 12.01 : Wed Nov 08 07:07:17 CET 2023\r\n11 Durchschnittliche Pfadlänge = 13.24 : Wed Nov 08 07:07:14 CET 2023\r\n10 Durchschnittliche Pfadlänge = 12.51 : Wed Nov 08 07:07:12 CET 2023\r\n9 Durchschnittliche Pfadlänge = 9.69 : Wed Nov 08 07:07:09 CET 2023\r\n8 Durchschnittliche Pfadlänge = 10.99 : Wed Nov 08 07:07:07 CET 2023\r\n7 Durchschnittliche Pfadlänge = 14.59 : Wed Nov 08 07:07:05 CET 2023\r\n6 Durchschnittliche Pfadlänge = 12.65 : Wed Nov 08 07:07:02 CET 2023\r\n5 Durchschnittliche Pfadlänge = 10.52 : Wed Nov 08 07:06:59 CET 2023\r\n4 Durchschnittliche Pfadlänge = 10.68 : Wed Nov 08 07:06:57 CET 2023\r\n3 Durchschnittliche Pfadlänge = 14.03 : Wed Nov 08 07:06:55 CET 2023\r\n2 Durchschnittliche Pfadlänge = 16.25 : Wed Nov 08 07:06:52 CET 2023\r\n1 Durchschnittliche Pfadlänge = 12.64 : Wed Nov 08 07:06:49 CET 2023\r\n0 Durchschnittliche Pfadlänge = 12.88 : Wed Nov 08 07:06:46 CET 2023
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/Berechnungen/FuzzySAW 3 x 7 x 4.txt b/src/main/resources/Berechnungen/FuzzySAW 3 x 7 x 4.txt
--- a/src/main/resources/Berechnungen/FuzzySAW 3 x 7 x 4.txt	(revision 2dc7079d0648cb52a2b8247473e5c26e1c4de2fc)
+++ b/src/main/resources/Berechnungen/FuzzySAW 3 x 7 x 4.txt	(date 1699427723251)
@@ -1,3 +1,140 @@
+999 Durchschnittliche Pfadlänge = 11.93 : Wed Nov 08 08:15:23 CET 2023
+998 Durchschnittliche Pfadlänge = 10.03 : Wed Nov 08 08:15:20 CET 2023
+997 Durchschnittliche Pfadlänge = 12.08 : Wed Nov 08 08:15:18 CET 2023
+996 Durchschnittliche Pfadlänge = 11.37 : Wed Nov 08 08:15:15 CET 2023
+995 Durchschnittliche Pfadlänge = 13.04 : Wed Nov 08 08:15:13 CET 2023
+994 Durchschnittliche Pfadlänge = 12.31 : Wed Nov 08 08:15:10 CET 2023
+993 Durchschnittliche Pfadlänge = 9.27 : Wed Nov 08 08:15:08 CET 2023
+992 Durchschnittliche Pfadlänge = 12.23 : Wed Nov 08 08:15:06 CET 2023
+991 Durchschnittliche Pfadlänge = 14.29 : Wed Nov 08 08:15:03 CET 2023
+990 Durchschnittliche Pfadlänge = 11.4 : Wed Nov 08 08:15:00 CET 2023
+989 Durchschnittliche Pfadlänge = 11.53 : Wed Nov 08 08:14:57 CET 2023
+988 Durchschnittliche Pfadlänge = 11.26 : Wed Nov 08 08:14:55 CET 2023
+987 Durchschnittliche Pfadlänge = 10.13 : Wed Nov 08 08:14:52 CET 2023
+986 Durchschnittliche Pfadlänge = 8.17 : Wed Nov 08 08:14:50 CET 2023
+985 Durchschnittliche Pfadlänge = 14.59 : Wed Nov 08 08:14:48 CET 2023
+984 Durchschnittliche Pfadlänge = 12.61 : Wed Nov 08 08:14:45 CET 2023
+983 Durchschnittliche Pfadlänge = 10.25 : Wed Nov 08 08:14:43 CET 2023
+982 Durchschnittliche Pfadlänge = 11.47 : Wed Nov 08 08:14:40 CET 2023
+981 Durchschnittliche Pfadlänge = 11.53 : Wed Nov 08 08:14:38 CET 2023
+980 Durchschnittliche Pfadlänge = 13.53 : Wed Nov 08 08:14:35 CET 2023
+979 Durchschnittliche Pfadlänge = 12.95 : Wed Nov 08 08:14:32 CET 2023
+978 Durchschnittliche Pfadlänge = 14.18 : Wed Nov 08 08:14:29 CET 2023
+977 Durchschnittliche Pfadlänge = 12.76 : Wed Nov 08 08:14:27 CET 2023
+976 Durchschnittliche Pfadlänge = 11.22 : Wed Nov 08 08:14:24 CET 2023
+975 Durchschnittliche Pfadlänge = 12.94 : Wed Nov 08 08:14:22 CET 2023
+974 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 08:14:19 CET 2023
+973 Durchschnittliche Pfadlänge = 12.02 : Wed Nov 08 08:14:16 CET 2023
+972 Durchschnittliche Pfadlänge = 8.57 : Wed Nov 08 08:14:13 CET 2023
+971 Durchschnittliche Pfadlänge = 14.71 : Wed Nov 08 08:14:12 CET 2023
+970 Durchschnittliche Pfadlänge = 9.75 : Wed Nov 08 08:14:09 CET 2023
+969 Durchschnittliche Pfadlänge = 12.1 : Wed Nov 08 08:14:07 CET 2023
+968 Durchschnittliche Pfadlänge = 11.91 : Wed Nov 08 08:14:04 CET 2023
+967 Durchschnittliche Pfadlänge = 9.66 : Wed Nov 08 08:14:01 CET 2023
+966 Durchschnittliche Pfadlänge = 12.46 : Wed Nov 08 08:13:59 CET 2023
+965 Durchschnittliche Pfadlänge = 11.13 : Wed Nov 08 08:13:56 CET 2023
+964 Durchschnittliche Pfadlänge = 11.49 : Wed Nov 08 08:13:54 CET 2023
+963 Durchschnittliche Pfadlänge = 11.37 : Wed Nov 08 08:13:51 CET 2023
+962 Durchschnittliche Pfadlänge = 11.01 : Wed Nov 08 08:13:48 CET 2023
+961 Durchschnittliche Pfadlänge = 12.62 : Wed Nov 08 08:13:46 CET 2023
+960 Durchschnittliche Pfadlänge = 10.84 : Wed Nov 08 08:13:43 CET 2023
+959 Durchschnittliche Pfadlänge = 13.56 : Wed Nov 08 08:13:41 CET 2023
+958 Durchschnittliche Pfadlänge = 10.66 : Wed Nov 08 08:13:38 CET 2023
+957 Durchschnittliche Pfadlänge = 13.79 : Wed Nov 08 08:13:36 CET 2023
+956 Durchschnittliche Pfadlänge = 12.46 : Wed Nov 08 08:13:33 CET 2023
+955 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 08:13:29 CET 2023
+954 Durchschnittliche Pfadlänge = 13.94 : Wed Nov 08 08:13:26 CET 2023
+953 Durchschnittliche Pfadlänge = 12.34 : Wed Nov 08 08:13:24 CET 2023
+952 Durchschnittliche Pfadlänge = 11.99 : Wed Nov 08 08:13:21 CET 2023
+951 Durchschnittliche Pfadlänge = 12.0 : Wed Nov 08 08:13:19 CET 2023
+950 Durchschnittliche Pfadlänge = 13.23 : Wed Nov 08 08:13:16 CET 2023
+949 Durchschnittliche Pfadlänge = 11.77 : Wed Nov 08 08:13:13 CET 2023
+948 Durchschnittliche Pfadlänge = 12.86 : Wed Nov 08 08:13:10 CET 2023
+947 Durchschnittliche Pfadlänge = 12.83 : Wed Nov 08 08:13:07 CET 2023
+946 Durchschnittliche Pfadlänge = 13.7 : Wed Nov 08 08:13:05 CET 2023
+945 Durchschnittliche Pfadlänge = 13.59 : Wed Nov 08 08:13:02 CET 2023
+944 Durchschnittliche Pfadlänge = 12.12 : Wed Nov 08 08:12:58 CET 2023
+943 Durchschnittliche Pfadlänge = 11.21 : Wed Nov 08 08:12:56 CET 2023
+942 Durchschnittliche Pfadlänge = 13.81 : Wed Nov 08 08:12:52 CET 2023
+941 Durchschnittliche Pfadlänge = 11.99 : Wed Nov 08 08:12:49 CET 2023
+940 Durchschnittliche Pfadlänge = 13.28 : Wed Nov 08 08:12:47 CET 2023
+939 Durchschnittliche Pfadlänge = 10.69 : Wed Nov 08 08:12:44 CET 2023
+938 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 08:12:41 CET 2023
+937 Durchschnittliche Pfadlänge = 8.3 : Wed Nov 08 08:12:38 CET 2023
+936 Durchschnittliche Pfadlänge = 11.4 : Wed Nov 08 08:12:36 CET 2023
+935 Durchschnittliche Pfadlänge = 10.15 : Wed Nov 08 08:12:33 CET 2023
+934 Durchschnittliche Pfadlänge = 11.79 : Wed Nov 08 08:12:30 CET 2023
+933 Durchschnittliche Pfadlänge = 8.35 : Wed Nov 08 08:12:27 CET 2023
+932 Durchschnittliche Pfadlänge = 13.53 : Wed Nov 08 08:12:25 CET 2023
+931 Durchschnittliche Pfadlänge = 12.31 : Wed Nov 08 08:12:20 CET 2023
+930 Durchschnittliche Pfadlänge = 13.38 : Wed Nov 08 08:12:17 CET 2023
+929 Durchschnittliche Pfadlänge = 13.83 : Wed Nov 08 08:12:14 CET 2023
+928 Durchschnittliche Pfadlänge = 9.54 : Wed Nov 08 08:12:10 CET 2023
+927 Durchschnittliche Pfadlänge = 14.37 : Wed Nov 08 08:12:08 CET 2023
+926 Durchschnittliche Pfadlänge = 13.99 : Wed Nov 08 08:12:04 CET 2023
+925 Durchschnittliche Pfadlänge = 10.73 : Wed Nov 08 08:12:01 CET 2023
+924 Durchschnittliche Pfadlänge = 12.28 : Wed Nov 08 08:11:58 CET 2023
+923 Durchschnittliche Pfadlänge = 12.56 : Wed Nov 08 08:11:56 CET 2023
+922 Durchschnittliche Pfadlänge = 14.22 : Wed Nov 08 08:11:52 CET 2023
+921 Durchschnittliche Pfadlänge = 14.74 : Wed Nov 08 08:11:48 CET 2023
+920 Durchschnittliche Pfadlänge = 11.89 : Wed Nov 08 08:11:45 CET 2023
+919 Durchschnittliche Pfadlänge = 7.76 : Wed Nov 08 08:11:41 CET 2023
+918 Durchschnittliche Pfadlänge = 11.67 : Wed Nov 08 08:11:39 CET 2023
+917 Durchschnittliche Pfadlänge = 12.83 : Wed Nov 08 08:11:36 CET 2023
+916 Durchschnittliche Pfadlänge = 8.51 : Wed Nov 08 08:11:32 CET 2023
+915 Durchschnittliche Pfadlänge = 11.56 : Wed Nov 08 08:11:28 CET 2023
+914 Durchschnittliche Pfadlänge = 12.76 : Wed Nov 08 08:11:25 CET 2023
+913 Durchschnittliche Pfadlänge = 14.48 : Wed Nov 08 08:11:22 CET 2023
+912 Durchschnittliche Pfadlänge = 9.6 : Wed Nov 08 08:11:18 CET 2023
+911 Durchschnittliche Pfadlänge = 11.11 : Wed Nov 08 08:11:16 CET 2023
+910 Durchschnittliche Pfadlänge = 11.57 : Wed Nov 08 08:11:13 CET 2023
+909 Durchschnittliche Pfadlänge = 12.26 : Wed Nov 08 08:11:10 CET 2023
+908 Durchschnittliche Pfadlänge = 12.16 : Wed Nov 08 08:11:07 CET 2023
+907 Durchschnittliche Pfadlänge = 11.61 : Wed Nov 08 08:11:04 CET 2023
+906 Durchschnittliche Pfadlänge = 11.43 : Wed Nov 08 08:11:02 CET 2023
+905 Durchschnittliche Pfadlänge = 12.09 : Wed Nov 08 08:10:58 CET 2023
+904 Durchschnittliche Pfadlänge = 11.21 : Wed Nov 08 08:10:56 CET 2023
+903 Durchschnittliche Pfadlänge = 12.61 : Wed Nov 08 08:10:53 CET 2023
+902 Durchschnittliche Pfadlänge = 13.56 : Wed Nov 08 08:10:50 CET 2023
+901 Durchschnittliche Pfadlänge = 13.3 : Wed Nov 08 08:10:46 CET 2023
+900 Durchschnittliche Pfadlänge = 8.79 : Wed Nov 08 08:10:43 CET 2023
+899 Durchschnittliche Pfadlänge = 11.58 : Wed Nov 08 08:10:40 CET 2023
+898 Durchschnittliche Pfadlänge = 8.61 : Wed Nov 08 08:10:37 CET 2023
+897 Durchschnittliche Pfadlänge = 13.33 : Wed Nov 08 08:10:35 CET 2023
+896 Durchschnittliche Pfadlänge = 10.68 : Wed Nov 08 08:10:32 CET 2023
+895 Durchschnittliche Pfadlänge = 11.97 : Wed Nov 08 08:10:29 CET 2023
+894 Durchschnittliche Pfadlänge = 12.64 : Wed Nov 08 08:10:26 CET 2023
+893 Durchschnittliche Pfadlänge = 7.44 : Wed Nov 08 08:10:23 CET 2023
+892 Durchschnittliche Pfadlänge = 11.52 : Wed Nov 08 08:10:22 CET 2023
+891 Durchschnittliche Pfadlänge = 14.71 : Wed Nov 08 08:10:19 CET 2023
+890 Durchschnittliche Pfadlänge = 9.84 : Wed Nov 08 08:10:16 CET 2023
+889 Durchschnittliche Pfadlänge = 14.46 : Wed Nov 08 08:10:13 CET 2023
+888 Durchschnittliche Pfadlänge = 13.91 : Wed Nov 08 08:10:10 CET 2023
+887 Durchschnittliche Pfadlänge = 14.57 : Wed Nov 08 08:10:08 CET 2023
+886 Durchschnittliche Pfadlänge = 11.12 : Wed Nov 08 08:10:04 CET 2023
+885 Durchschnittliche Pfadlänge = 11.92 : Wed Nov 08 08:10:01 CET 2023
+884 Durchschnittliche Pfadlänge = 11.65 : Wed Nov 08 08:09:58 CET 2023
+883 Durchschnittliche Pfadlänge = 11.34 : Wed Nov 08 08:09:55 CET 2023
+882 Durchschnittliche Pfadlänge = 12.46 : Wed Nov 08 08:09:52 CET 2023
+881 Durchschnittliche Pfadlänge = 12.71 : Wed Nov 08 08:09:48 CET 2023
+880 Durchschnittliche Pfadlänge = 10.54 : Wed Nov 08 08:09:43 CET 2023
+879 Durchschnittliche Pfadlänge = 10.43 : Wed Nov 08 08:09:41 CET 2023
+878 Durchschnittliche Pfadlänge = 13.29 : Wed Nov 08 08:09:38 CET 2023
+877 Durchschnittliche Pfadlänge = 11.65 : Wed Nov 08 08:09:35 CET 2023
+876 Durchschnittliche Pfadlänge = 9.77 : Wed Nov 08 08:09:32 CET 2023
+875 Durchschnittliche Pfadlänge = 14.94 : Wed Nov 08 08:09:30 CET 2023
+874 Durchschnittliche Pfadlänge = 12.81 : Wed Nov 08 08:09:26 CET 2023
+873 Durchschnittliche Pfadlänge = 12.55 : Wed Nov 08 08:09:24 CET 2023
+872 Durchschnittliche Pfadlänge = 14.32 : Wed Nov 08 08:09:21 CET 2023
+871 Durchschnittliche Pfadlänge = 12.0 : Wed Nov 08 08:09:17 CET 2023
+870 Durchschnittliche Pfadlänge = 13.5 : Wed Nov 08 08:09:15 CET 2023
+869 Durchschnittliche Pfadlänge = 10.81 : Wed Nov 08 08:09:11 CET 2023
+868 Durchschnittliche Pfadlänge = 10.91 : Wed Nov 08 08:09:09 CET 2023
+867 Durchschnittliche Pfadlänge = 15.07 : Wed Nov 08 08:09:07 CET 2023
+866 Durchschnittliche Pfadlänge = 11.07 : Wed Nov 08 08:09:03 CET 2023
+865 Durchschnittliche Pfadlänge = 11.55 : Wed Nov 08 08:09:01 CET 2023
+864 Durchschnittliche Pfadlänge = 10.92 : Wed Nov 08 08:08:58 CET 2023
+863 Durchschnittliche Pfadlänge = 7.32 : Wed Nov 08 08:08:55 CET 2023
 862 Durchschnittliche Pfadlänge = 14.59 : Wed Nov 08 07:41:57 CET 2023
 861 Durchschnittliche Pfadlänge = 13.79 : Wed Nov 08 07:41:54 CET 2023
 860 Durchschnittliche Pfadlänge = 11.72 : Wed Nov 08 07:41:51 CET 2023
